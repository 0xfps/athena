{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AthenaLaunch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_unwrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Unwrap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_wrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Wrap",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "precalculateTaxForWrap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalUnwrapped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "totalUnwrappedByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWrapped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "totalWrappedByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
    "1": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/ERC20.sol",
    "10": "contracts/athena/contracts/AthenaEther.sol",
    "11": "contracts/athena/contracts/AthenaWrap.sol",
    "12": "contracts/athena/contracts/interfaces/IAthenaWrap.sol",
    "13": "contracts/athena/contracts/utils/Guard.sol",
    "2": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol",
    "3": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/athena/contracts/AthenaWrap.sol",
    "exportedSymbols": {
      "AthenaEther": [
        875
      ],
      "AthenaWrap": [
        1194
      ],
      "Guard": [
        1293
      ],
      "IAthenaWrap": [
        1269
      ],
      "Ownable": [
        1984
      ]
    },
    "id": 1195,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 877,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:24:11"
      },
      {
        "absolutePath": "contracts/athena/contracts/interfaces/IAthenaWrap.sol",
        "file": "./interfaces/IAthenaWrap.sol",
        "id": 879,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1195,
        "sourceUnit": 1270,
        "src": "62:57:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 878,
              "name": "IAthenaWrap",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1269,
              "src": "70:11:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/athena/contracts/AthenaEther.sol",
        "file": "./AthenaEther.sol",
        "id": 881,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1195,
        "sourceUnit": 876,
        "src": "120:46:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 880,
              "name": "AthenaEther",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 875,
              "src": "128:11:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/athena/contracts/utils/Guard.sol",
        "file": "./utils/Guard.sol",
        "id": 883,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1195,
        "sourceUnit": 1294,
        "src": "168:40:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 882,
              "name": "Guard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1293,
              "src": "176:5:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 885,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1195,
        "sourceUnit": 1985,
        "src": "210:67:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 884,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1984,
              "src": "218:7:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 887,
              "name": "IAthenaWrap",
              "nameLocations": [
                "506:11:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1269,
              "src": "506:11:11"
            },
            "id": 888,
            "nodeType": "InheritanceSpecifier",
            "src": "506:11:11"
          },
          {
            "baseName": {
              "id": 889,
              "name": "AthenaEther",
              "nameLocations": [
                "520:11:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 875,
              "src": "520:11:11"
            },
            "id": 890,
            "nodeType": "InheritanceSpecifier",
            "src": "520:11:11"
          },
          {
            "baseName": {
              "id": 891,
              "name": "Ownable",
              "nameLocations": [
                "534:7:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1984,
              "src": "534:7:11"
            },
            "id": 892,
            "nodeType": "InheritanceSpecifier",
            "src": "534:7:11"
          },
          {
            "baseName": {
              "id": 893,
              "name": "Guard",
              "nameLocations": [
                "543:5:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1293,
              "src": "543:5:11"
            },
            "id": 894,
            "nodeType": "InheritanceSpecifier",
            "src": "543:5:11"
          }
        ],
        "canonicalName": "AthenaWrap",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 886,
          "nodeType": "StructuredDocumentation",
          "src": "279:202:11",
          "text": " @title AthenaWrap.\n @author Anthony (fps) https://github.com/0xfps.\n @dev  AthenaWrap, a simple wrapping protocol. It takes in ETH, MATIC or\n       AVAX, and sends AETH tokens to the caller."
        },
        "fullyImplemented": true,
        "id": 1194,
        "linearizedBaseContracts": [
          1194,
          1293,
          1984,
          875,
          1879,
          2087,
          2062,
          2109,
          1269
        ],
        "name": "AthenaWrap",
        "nameLocation": "491:10:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 895,
              "nodeType": "StructuredDocumentation",
              "src": "555:39:11",
              "text": "@dev Total wrapped in the protocol."
            },
            "id": 897,
            "mutability": "mutable",
            "name": "_totalWrapped",
            "nameLocation": "615:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "599:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 896,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "599:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 898,
              "nodeType": "StructuredDocumentation",
              "src": "634:40:11",
              "text": "@dev Tota unwrapped in the protocol."
            },
            "id": 900,
            "mutability": "mutable",
            "name": "_totalUnwrapped",
            "nameLocation": "695:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "679:31:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 899,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 901,
              "nodeType": "StructuredDocumentation",
              "src": "716:30:11",
              "text": "@dev Protocol tax revenue."
            },
            "id": 903,
            "mutability": "mutable",
            "name": "tax",
            "nameLocation": "767:3:11",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "751:19:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 902,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "751:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 904,
              "nodeType": "StructuredDocumentation",
              "src": "777:60:11",
              "text": "@dev Total amount wrapped by an address in the protocol."
            },
            "id": 908,
            "mutability": "mutable",
            "name": "_totalWrappedByAddress",
            "nameLocation": "878:22:11",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "842:58:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 907,
              "keyType": {
                "id": 905,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "850:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "842:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 906,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "861:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 909,
              "nodeType": "StructuredDocumentation",
              "src": "906:62:11",
              "text": "@dev Total amount unwrapped by an address in the protocol."
            },
            "id": 913,
            "mutability": "mutable",
            "name": "_totalUnwrappedByAddress",
            "nameLocation": "1009:24:11",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "973:60:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 912,
              "keyType": {
                "id": 910,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "981:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "973:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 911,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "992:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "1081:2:11",
              "statements": []
            },
            "id": 923,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 918,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1074:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AthenaWrap_$1194",
                          "typeString": "contract AthenaWrap"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AthenaWrap_$1194",
                          "typeString": "contract AthenaWrap"
                        }
                      ],
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1066:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 916,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1066:7:11",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:13:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 920,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 915,
                  "name": "AthenaEther",
                  "nameLocations": [
                    "1054:11:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 875,
                  "src": "1054:11:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1054:26:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:11"
            },
            "returnParameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:0:11"
            },
            "scope": 1194,
            "src": "1040:43:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "1116:2:11",
              "statements": []
            },
            "id": 927,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:2:11"
            },
            "returnParameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:0:11"
            },
            "scope": 1194,
            "src": "1089:29:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1224
            ],
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "1222:88:11",
              "statements": [
                {
                  "documentation": "@dev Return total wrapped by protocol.",
                  "expression": {
                    "id": 933,
                    "name": "_totalWrapped",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 897,
                    "src": "1290:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 932,
                  "id": 934,
                  "nodeType": "Return",
                  "src": "1283:20:11"
                }
              ]
            },
            "documentation": {
              "id": 928,
              "nodeType": "StructuredDocumentation",
              "src": "1124:40:11",
              "text": " @inheritdoc IAthenaWrap"
            },
            "functionSelector": "afad55fd",
            "id": 936,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalWrapped",
            "nameLocation": "1178:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:2:11"
            },
            "returnParameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 931,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "1213:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:9:11"
            },
            "scope": 1194,
            "src": "1169:141:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1230
            ],
            "body": {
              "id": 944,
              "nodeType": "Block",
              "src": "1416:92:11",
              "statements": [
                {
                  "documentation": "@dev Return total unwrapped by protocol.",
                  "expression": {
                    "id": 942,
                    "name": "_totalUnwrapped",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 900,
                    "src": "1486:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 941,
                  "id": 943,
                  "nodeType": "Return",
                  "src": "1479:22:11"
                }
              ]
            },
            "documentation": {
              "id": 937,
              "nodeType": "StructuredDocumentation",
              "src": "1316:40:11",
              "text": " @inheritdoc IAthenaWrap"
            },
            "functionSelector": "1303bfb0",
            "id": 945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalUnwrapped",
            "nameLocation": "1370:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1384:2:11"
            },
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "1407:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:9:11"
            },
            "scope": 1194,
            "src": "1361:147:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1238
            ],
            "body": {
              "id": 967,
              "nodeType": "Block",
              "src": "1656:217:11",
              "statements": [
                {
                  "documentation": "@dev Ensure Address is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 954,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 948,
                          "src": "1729:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1749:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1741:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 955,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1741:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1741:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1729:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3078302041646472657373",
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1753:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8a0bade503ffd0093ad2f4e5845c0dfe42f306f8131819574d708978e709644",
                          "typeString": "literal_string \"0x0 Address\""
                        },
                        "value": "0x0 Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8a0bade503ffd0093ad2f4e5845c0dfe42f306f8131819574d708978e709644",
                          "typeString": "literal_string \"0x0 Address\""
                        }
                      ],
                      "id": 953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1721:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1721:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:46:11"
                },
                {
                  "documentation": "@dev Return total wrapped by address.",
                  "expression": {
                    "baseExpression": {
                      "id": 963,
                      "name": "_totalWrappedByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "1834:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 965,
                    "indexExpression": {
                      "id": 964,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 948,
                      "src": "1857:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1834:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 952,
                  "id": 966,
                  "nodeType": "Return",
                  "src": "1827:39:11"
                }
              ]
            },
            "documentation": {
              "id": 946,
              "nodeType": "StructuredDocumentation",
              "src": "1514:40:11",
              "text": " @inheritdoc IAthenaWrap"
            },
            "functionSelector": "4581b2af",
            "id": 968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalWrappedByAddress",
            "nameLocation": "1568:21:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1598:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "1590:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1589:18:11"
            },
            "returnParameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "1643:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1643:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1642:9:11"
            },
            "scope": 1194,
            "src": "1559:314:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1246
            ],
            "body": {
              "id": 990,
              "nodeType": "Block",
              "src": "2023:219:11",
              "statements": [
                {
                  "documentation": "@dev Ensure Address is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 977,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "2096:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2116:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2108:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 978,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2108:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2108:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2096:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3078302041646472657373",
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2120:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8a0bade503ffd0093ad2f4e5845c0dfe42f306f8131819574d708978e709644",
                          "typeString": "literal_string \"0x0 Address\""
                        },
                        "value": "0x0 Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8a0bade503ffd0093ad2f4e5845c0dfe42f306f8131819574d708978e709644",
                          "typeString": "literal_string \"0x0 Address\""
                        }
                      ],
                      "id": 976,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2088:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:46:11"
                },
                {
                  "documentation": "@dev Return total wrapped by address.",
                  "expression": {
                    "baseExpression": {
                      "id": 986,
                      "name": "_totalUnwrappedByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "2201:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 988,
                    "indexExpression": {
                      "id": 987,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "2226:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2201:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 975,
                  "id": 989,
                  "nodeType": "Return",
                  "src": "2194:41:11"
                }
              ]
            },
            "documentation": {
              "id": 969,
              "nodeType": "StructuredDocumentation",
              "src": "1879:40:11",
              "text": " @inheritdoc IAthenaWrap"
            },
            "functionSelector": "e9b0e233",
            "id": 991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalUnwrappedByAddress",
            "nameLocation": "1933:23:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1965:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "1957:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1956:18:11"
            },
            "returnParameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "2010:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2009:9:11"
            },
            "scope": 1194,
            "src": "1924:318:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1254
            ],
            "body": {
              "id": 1018,
              "nodeType": "Block",
              "src": "2390:265:11",
              "statements": [
                {
                  "documentation": "@dev Require that amount is not 0.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1000,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 994,
                          "src": "2455:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2466:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2455:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74203d3d2030",
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7543e90351e09c5a2578c76270c52541c19e27eb3dffeca7e784e485011f5e1c",
                          "typeString": "literal_string \"Amount == 0\""
                        },
                        "value": "Amount == 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7543e90351e09c5a2578c76270c52541c19e27eb3dffeca7e784e485011f5e1c",
                          "typeString": "literal_string \"Amount == 0\""
                        }
                      ],
                      "id": 999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2447:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2447:36:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1005,
                  "nodeType": "ExpressionStatement",
                  "src": "2447:36:11"
                },
                {
                  "assignments": [
                    1008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1008,
                      "mutability": "mutable",
                      "name": "taxOnAmount",
                      "nameLocation": "2554:11:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1018,
                      "src": "2546:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1007,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2546:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Calculate tax [0.1% of `_amount`].",
                  "id": 1015,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 1009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2569:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1010,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 994,
                            "src": "2573:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2569:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1012,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2568:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2584:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "2568:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2546:42:11"
                },
                {
                  "documentation": "@dev Return value.",
                  "expression": {
                    "id": 1016,
                    "name": "taxOnAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1008,
                    "src": "2637:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 998,
                  "id": 1017,
                  "nodeType": "Return",
                  "src": "2630:18:11"
                }
              ]
            },
            "documentation": {
              "id": 992,
              "nodeType": "StructuredDocumentation",
              "src": "2248:40:11",
              "text": " @inheritdoc IAthenaWrap"
            },
            "functionSelector": "8e765ea1",
            "id": 1019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "precalculateTaxForWrap",
            "nameLocation": "2302:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2333:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1019,
                  "src": "2325:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2324:17:11"
            },
            "returnParameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1019,
                  "src": "2377:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2377:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2376:9:11"
            },
            "scope": 1194,
            "src": "2293:362:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1258
            ],
            "body": {
              "id": 1081,
              "nodeType": "Block",
              "src": "2737:721:11",
              "statements": [
                {
                  "documentation": "@dev Require money sent is not 0.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1024,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2801:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2805:5:11",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2801:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2814:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2801:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5772617070696e672030",
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2817:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7859477165dff67429a762a50210355cee57273ee875e923c99b19de64fef684",
                          "typeString": "literal_string \"Wrapping 0\""
                        },
                        "value": "Wrapping 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7859477165dff67429a762a50210355cee57273ee875e923c99b19de64fef684",
                          "typeString": "literal_string \"Wrapping 0\""
                        }
                      ],
                      "id": 1023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2793:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2793:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1030,
                  "nodeType": "ExpressionStatement",
                  "src": "2793:37:11"
                },
                {
                  "assignments": [
                    1033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1033,
                      "mutability": "mutable",
                      "name": "_tax",
                      "nameLocation": "2881:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1081,
                      "src": "2873:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1032,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2873:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Calculate tax.",
                  "id": 1038,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1035,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2911:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2915:5:11",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2911:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1034,
                      "name": "precalculateTaxForWrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "2888:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:33:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2873:48:11"
                },
                {
                  "assignments": [
                    1041
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1041,
                      "mutability": "mutable",
                      "name": "amountToWrap",
                      "nameLocation": "2970:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1081,
                      "src": "2962:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1040,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2962:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Subtract tax.",
                  "id": 1046,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1042,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2985:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2989:5:11",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2985:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1044,
                      "name": "_tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "2997:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2985:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2962:39:11"
                },
                {
                  "documentation": "@dev Add that to taxes.",
                  "expression": {
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1047,
                      "name": "tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "3047:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1048,
                      "name": "_tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "3054:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3047:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1050,
                  "nodeType": "ExpressionStatement",
                  "src": "3047:11:11"
                },
                {
                  "documentation": "@dev Increment total wrapped by the value.",
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1051,
                      "name": "_totalWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "3123:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1052,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3140:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3144:5:11",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3140:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3123:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "3123:26:11"
                },
                {
                  "documentation": "@dev Increment the total wrapped by caller by value.",
                  "expression": {
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1056,
                        "name": "_totalWrappedByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "3224:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1059,
                      "indexExpression": {
                        "expression": {
                          "id": 1057,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3247:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3251:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3247:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3224:34:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1060,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3262:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3266:5:11",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3262:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3224:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "3224:47:11"
                },
                {
                  "documentation": "@dev Transfer tokens.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1067,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3334:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthenaWrap_$1194",
                              "typeString": "contract AthenaWrap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthenaWrap_$1194",
                              "typeString": "contract AthenaWrap"
                            }
                          ],
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3326:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1065,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3326:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3326:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1069,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3341:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3345:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3341:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1071,
                        "name": "amountToWrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "3353:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1064,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "3316:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:50:11"
                },
                {
                  "documentation": "@dev Emit the {Wrap()} event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3429:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3433:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3429:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1077,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3441:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3445:5:11",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3441:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1074,
                      "name": "Wrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1204,
                      "src": "3424:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3424:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1080,
                  "nodeType": "EmitStatement",
                  "src": "3419:32:11"
                }
              ]
            },
            "documentation": {
              "id": 1020,
              "nodeType": "StructuredDocumentation",
              "src": "2661:40:11",
              "text": " @inheritdoc IAthenaWrap"
            },
            "functionSelector": "d46eb119",
            "id": 1082,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nameLocation": "2715:4:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2719:2:11"
            },
            "returnParameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:0:11"
            },
            "scope": 1194,
            "src": "2706:752:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1264
            ],
            "body": {
              "id": 1153,
              "nodeType": "Block",
              "src": "3562:878:11",
              "statements": [
                {
                  "documentation": "@dev Require money sent is not 0.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1091,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "3626:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3637:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3626:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5772617070696e672030",
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3640:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7859477165dff67429a762a50210355cee57273ee875e923c99b19de64fef684",
                          "typeString": "literal_string \"Wrapping 0\""
                        },
                        "value": "Wrapping 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7859477165dff67429a762a50210355cee57273ee875e923c99b19de64fef684",
                          "typeString": "literal_string \"Wrapping 0\""
                        }
                      ],
                      "id": 1090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3618:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3618:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1096,
                  "nodeType": "ExpressionStatement",
                  "src": "3618:35:11"
                },
                {
                  "assignments": [
                    1099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1099,
                      "mutability": "mutable",
                      "name": "_tax",
                      "nameLocation": "3704:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1153,
                      "src": "3696:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1098,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3696:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Calculate tax.",
                  "id": 1103,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1101,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "3734:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1100,
                      "name": "precalculateTaxForWrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "3711:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3711:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3696:46:11"
                },
                {
                  "assignments": [
                    1106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1106,
                      "mutability": "mutable",
                      "name": "amountToUnwrap",
                      "nameLocation": "3791:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1153,
                      "src": "3783:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1105,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3783:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Subtract tax.",
                  "id": 1110,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1107,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "3808:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1108,
                      "name": "_tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1099,
                      "src": "3818:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3808:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3783:39:11"
                },
                {
                  "documentation": "@dev Increment amount unwrapped.",
                  "expression": {
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1111,
                      "name": "_totalUnwrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "3877:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1112,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "3896:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3877:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1114,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:26:11"
                },
                {
                  "documentation": "@dev Increment amount unwrapped by the caller.",
                  "expression": {
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1115,
                        "name": "_totalUnwrappedByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "3972:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1118,
                      "indexExpression": {
                        "expression": {
                          "id": 1116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3997:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4001:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3997:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3972:36:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1119,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "4012:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3972:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1121,
                  "nodeType": "ExpressionStatement",
                  "src": "3972:47:11"
                },
                {
                  "documentation": "@dev Transfer amount from caller to contract.",
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1123,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4111:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4115:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4111:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1127,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4144:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthenaWrap_$1194",
                              "typeString": "contract AthenaWrap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthenaWrap_$1194",
                              "typeString": "contract AthenaWrap"
                            }
                          ],
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4136:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1125,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4136:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4136:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1129,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "4164:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1122,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "4088:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4088:93:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "4088:93:11"
                },
                {
                  "assignments": [
                    1133,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1133,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "4260:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1153,
                      "src": "4255:9:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1132,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4255:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@dev Send transferable value after tax to caller.",
                  "id": 1144,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4318:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1136,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4278:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4282:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4278:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4270:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1134,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4270:8:11",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4270:19:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4290:4:11",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4270:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1140,
                          "name": "amountToUnwrap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1106,
                          "src": "4302:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4270:47:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4270:51:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4254:67:11"
                },
                {
                  "expression": {
                    "id": 1145,
                    "name": "sent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1133,
                    "src": "4331:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "4331:4:11"
                },
                {
                  "documentation": "@dev Emit the {Unwrap()} event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1148,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4413:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4417:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4413:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1150,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "4425:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1147,
                      "name": "Unwrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1211,
                      "src": "4406:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4406:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1152,
                  "nodeType": "EmitStatement",
                  "src": "4401:32:11"
                }
              ]
            },
            "documentation": {
              "id": 1083,
              "nodeType": "StructuredDocumentation",
              "src": "3464:40:11",
              "text": " @inheritdoc IAthenaWrap"
            },
            "functionSelector": "de0e9a3e",
            "id": 1154,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1088,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1087,
                  "name": "noReentrance",
                  "nameLocations": [
                    "3549:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1292,
                  "src": "3549:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3549:12:11"
              }
            ],
            "name": "unwrap",
            "nameLocation": "3518:6:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3533:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "3525:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3525:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3524:17:11"
            },
            "returnParameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3562:0:11"
            },
            "scope": 1194,
            "src": "3509:931:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1268
            ],
            "body": {
              "id": 1192,
              "nodeType": "Block",
              "src": "4528:365:11",
              "statements": [
                {
                  "documentation": "@dev Require that taxes have been collected.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1161,
                          "name": "tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "4603:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4610:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4603:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546178203d3d2030",
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4613:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea6b46c0d753956642104347eee182aa17641cc22ca2c29d84938fee99005bb",
                          "typeString": "literal_string \"Tax == 0\""
                        },
                        "value": "Tax == 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea6b46c0d753956642104347eee182aa17641cc22ca2c29d84938fee99005bb",
                          "typeString": "literal_string \"Tax == 0\""
                        }
                      ],
                      "id": 1160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4595:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4595:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:29:11"
                },
                {
                  "documentation": "@dev Reset tax.",
                  "expression": {
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1167,
                      "name": "tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "4663:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4669:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4663:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "4663:7:11"
                },
                {
                  "assignments": [
                    1172,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1172,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "4727:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1192,
                      "src": "4722:9:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1171,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4722:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@dev Transfer tax earnings.",
                  "id": 1183,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4771:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1175,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1912,
                                "src": "4745:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4745:7:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4737:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1173,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4737:8:11",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4737:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4754:4:11",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4737:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1179,
                          "name": "tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "4766:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4737:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4737:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4721:53:11"
                },
                {
                  "expression": {
                    "id": 1184,
                    "name": "sent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1172,
                    "src": "4784:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "4784:4:11"
                },
                {
                  "documentation": "@dev Emit the {Withdraw()} event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1187,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4870:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4874:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4870:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1189,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "4882:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1186,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1218,
                      "src": "4861:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4861:25:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1191,
                  "nodeType": "EmitStatement",
                  "src": "4856:30:11"
                }
              ]
            },
            "documentation": {
              "id": 1155,
              "nodeType": "StructuredDocumentation",
              "src": "4446:40:11",
              "text": " @inheritdoc IAthenaWrap"
            },
            "functionSelector": "3ccfd60b",
            "id": 1193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1157,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4518:9:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1926,
                  "src": "4518:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4518:9:11"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4500:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4508:2:11"
            },
            "returnParameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4528:0:11"
            },
            "scope": 1194,
            "src": "4491:402:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1195,
        "src": "482:4413:11",
        "usedErrors": []
      }
    ],
    "src": "36:4859:11"
  },
  "bytecode": "60806040523480156200001157600080fd5b50306040518060400160405280600b81526020016a20ba3432b730a2ba3432b960a91b815250604051806040016040528060048152602001630828aa8960e31b8152508160039081620000659190620002d7565b506004620000748282620002d7565b50505062000095816b033b2e3c9fd0803ce8000000620000f460201b60201c565b604080516001600160a01b03831681526b033b2e3c9fd0803ce800000060208201527fbcb7931b13ef7e0a25521ea197b833f57da7b9b6dbb2e3868e023081e713e9a3910160405180910390a150620000ee33620001dc565b620003cb565b6001600160a01b0382166200014f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001639190620003a3565b90915550506001600160a01b0382166000908152602081905260408120805483929062000192908490620003a3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200025e57607f821691505b6020821081036200027f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022e57600081815260208120601f850160051c81016020861015620002ae5750805b601f850160051c820191505b81811015620002cf57828155600101620002ba565b505050505050565b81516001600160401b03811115620002f357620002f362000233565b6200030b8162000304845462000249565b8462000285565b602080601f8311600181146200034357600084156200032a5750858301515b600019600386901b1c1916600185901b178555620002cf565b600085815260208120601f198616915b82811015620003745788860151825594840194600190910190840162000353565b5085821015620003935787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003c557634e487b7160e01b600052601160045260246000fd5b92915050565b61111080620003db6000396000f3fe6080604052600436106101395760003560e01c80638da5cb5b116100ab578063afad55fd1161006f578063afad55fd1461034f578063d46eb11914610364578063dd62ed3e1461036c578063de0e9a3e1461038c578063e9b0e233146103ac578063f2fde38b146103cc57600080fd5b80638da5cb5b146102b25780638e765ea1146102da57806395d89b41146102fa578063a457c2d71461030f578063a9059cbb1461032f57600080fd5b8063313ce567116100fd578063313ce567146101f457806339509351146102105780633ccfd60b146102305780634581b2af1461024757806370a0823114610267578063715018a61461029d57600080fd5b806306fdde0314610145578063095ea7b3146101705780631303bfb0146101a057806318160ddd146101bf57806323b872dd146101d457600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5061015a6103ec565b6040516101679190610ebf565b60405180910390f35b34801561017c57600080fd5b5061019061018b366004610f29565b61047e565b6040519015158152602001610167565b3480156101ac57600080fd5b506007545b604051908152602001610167565b3480156101cb57600080fd5b506002546101b1565b3480156101e057600080fd5b506101906101ef366004610f53565b610498565b34801561020057600080fd5b5060405160128152602001610167565b34801561021c57600080fd5b5061019061022b366004610f29565b6104bc565b34801561023c57600080fd5b506102456104de565b005b34801561025357600080fd5b506101b1610262366004610f8f565b6105dd565b34801561027357600080fd5b506101b1610282366004610f8f565b6001600160a01b031660009081526020819052604090205490565b3480156102a957600080fd5b5061024561063f565b3480156102be57600080fd5b506005546040516001600160a01b039091168152602001610167565b3480156102e657600080fd5b506101b16102f5366004610faa565b610675565b34801561030657600080fd5b5061015a6106d6565b34801561031b57600080fd5b5061019061032a366004610f29565b6106e5565b34801561033b57600080fd5b5061019061034a366004610f29565b610760565b34801561035b57600080fd5b506006546101b1565b61024561076e565b34801561037857600080fd5b506101b1610387366004610fc3565b610857565b34801561039857600080fd5b506102456103a7366004610faa565b610882565b3480156103b857600080fd5b506101b16103c7366004610f8f565b610a04565b3480156103d857600080fd5b506102456103e7366004610f8f565b610a66565b6060600380546103fb90610ff6565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610ff6565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60003361048c818585610b01565b60019150505b92915050565b6000336104a6858285610c25565b6104b1858585610c9f565b506001949350505050565b60003361048c8185856104cf8383610857565b6104d99190611046565b610b01565b6005546001600160a01b031633146105115760405162461bcd60e51b815260040161050890611059565b60405180910390fd5b60085460000361054e5760405162461bcd60e51b81526020600482015260086024820152670546178203d3d20360c41b6044820152606401610508565b600060088190556005546040516001600160a01b039091169082908181818181875af1925050503d80600081146105a1576040519150601f19603f3d011682016040523d82523d6000602084013e6105a6565b606091505b50506008546040519192509033907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436490600090a350565b60006001600160a01b0382166106235760405162461bcd60e51b815260206004820152600b60248201526a307830204164647265737360a81b6044820152606401610508565b506001600160a01b031660009081526009602052604090205490565b6005546001600160a01b031633146106695760405162461bcd60e51b815260040161050890611059565b6106736000610e6d565b565b6000816000036106b55760405162461bcd60e51b815260206004820152600b60248201526a0416d6f756e74203d3d20360ac1b6044820152606401610508565b60006103e86106c584600161108e565b6106cf91906110a5565b9392505050565b6060600480546103fb90610ff6565b600033816106f38286610857565b9050838110156107535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610508565b6104b18286868403610b01565b60003361048c818585610c9f565b346000036107ab5760405162461bcd60e51b815260206004820152600a60248201526905772617070696e6720360b41b6044820152606401610508565b60006107b634610675565b905060006107c482346110c7565b905081600860008282546107d89190611046565b9250508190555034600660008282546107f19190611046565b90915550503360009081526009602052604081208054349290610815908490611046565b909155506108269050303383610c9f565b604051349033907fb61d00fdfee32467c7d81db64c811ae60c104c346debf36a14afe84b8fce59e590600090a35050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600554600160a01b900460ff16156108c55760405162461bcd60e51b8152602060048201526006602482015265131bd8dad95960d21b6044820152606401610508565b6005805460ff60a01b1916600160a01b17905560008190036109165760405162461bcd60e51b815260206004820152600a60248201526905772617070696e6720360b41b6044820152606401610508565b600061092182610675565b9050600061092f82846110c7565b905082600760008282546109439190611046565b9091555050336000908152600a602052604081208054859290610967908490611046565b909155506109789050333085610c9f565b604051600090339083908381818185875af1925050503d80600081146109ba576040519150601f19603f3d011682016040523d82523d6000602084013e6109bf565b606091505b5050604051909150849033907f5dd085b6070b4cae004f84daafd199fd55b0bdfa11c3a802baffe89c2419d8c290600090a350506005805460ff60a01b191690555050565b60006001600160a01b038216610a4a5760405162461bcd60e51b815260206004820152600b60248201526a307830204164647265737360a81b6044820152606401610508565b506001600160a01b03166000908152600a602052604090205490565b6005546001600160a01b03163314610a905760405162461bcd60e51b815260040161050890611059565b6001600160a01b038116610af55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610508565b610afe81610e6d565b50565b6001600160a01b038316610b635760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610508565b6001600160a01b038216610bc45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610508565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c318484610857565b90506000198114610c995781811015610c8c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610508565b610c998484848403610b01565b50505050565b6001600160a01b038316610d035760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610508565b6001600160a01b038216610d655760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610508565b6001600160a01b03831660009081526020819052604090205481811015610ddd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610508565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e14908490611046565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e6091815260200190565b60405180910390a3610c99565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610eec57858101830151858201604001528201610ed0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610f2457600080fd5b919050565b60008060408385031215610f3c57600080fd5b610f4583610f0d565b946020939093013593505050565b600080600060608486031215610f6857600080fd5b610f7184610f0d565b9250610f7f60208501610f0d565b9150604084013590509250925092565b600060208284031215610fa157600080fd5b6106cf82610f0d565b600060208284031215610fbc57600080fd5b5035919050565b60008060408385031215610fd657600080fd5b610fdf83610f0d565b9150610fed60208401610f0d565b90509250929050565b600181811c9082168061100a57607f821691505b60208210810361102a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561049257610492611030565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b808202811582820484141761049257610492611030565b6000826110c257634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104925761049261103056fea264697066735822122063b587df70c569ad6a42d6be42805094a7a7189a53da50fe4a85516519fccf7764736f6c63430008110033",
  "bytecodeSha1": "995f1021e01b6387bc08508e82f86b5995798188",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "AthenaWrap",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "70": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {
        "ERC20._approve": {
          "63": [
            10250,
            10269,
            true
          ],
          "64": [
            10328,
            10349,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "65": [
            10966,
            11003,
            false
          ],
          "66": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "67": [
            7610,
            7628,
            true
          ],
          "68": [
            7688,
            7704,
            true
          ],
          "69": [
            7859,
            7880,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "62": [
            6811,
            6846,
            true
          ]
        }
      },
      "10": {},
      "11": {
        "AthenaWrap.precalculateTaxForWrap": {
          "58": [
            2455,
            2467,
            true
          ]
        },
        "AthenaWrap.totalUnwrappedByAddress": {
          "61": [
            2096,
            2118,
            true
          ]
        },
        "AthenaWrap.totalWrappedByAddress": {
          "57": [
            1729,
            1751,
            true
          ]
        },
        "AthenaWrap.unwrap": {
          "60": [
            3626,
            3638,
            true
          ]
        },
        "AthenaWrap.withdraw": {
          "56": [
            4603,
            4611,
            true
          ]
        },
        "AthenaWrap.wrap": {
          "59": [
            2801,
            2815,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "2": {},
      "3": {},
      "4": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "54": [
            2378,
            2395
          ],
          "55": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "4": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "19": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "39": [
            1998,
            2071
          ],
          "40": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "ERC20._approve": {
          "41": [
            10242,
            10310
          ],
          "42": [
            10320,
            10388
          ],
          "43": [
            10399,
            10435
          ],
          "44": [
            10445,
            10482
          ]
        },
        "ERC20._spendAllowance": {
          "45": [
            11019,
            11087
          ],
          "46": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "47": [
            7602,
            7670
          ],
          "48": [
            7680,
            7744
          ],
          "49": [
            7851,
            7923
          ],
          "50": [
            7957,
            7995
          ],
          "51": [
            8015,
            8038
          ],
          "52": [
            8049,
            8080
          ],
          "53": [
            8091,
            8128
          ]
        },
        "ERC20.allowance": {
          "31": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "8": [
            4570,
            4602
          ],
          "9": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "3": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "2": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "22": [
            6803,
            6888
          ],
          "23": [
            6922,
            6982
          ]
        },
        "ERC20.increaseAllowance": {
          "13": [
            6015,
            6079
          ]
        },
        "ERC20.name": {
          "6": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "21": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "1": [
            3324,
            3343
          ]
        },
        "ERC20.transfer": {
          "24": [
            3862,
            3890
          ]
        },
        "ERC20.transferFrom": {
          "10": [
            5375,
            5413
          ],
          "11": [
            5423,
            5450
          ],
          "12": [
            5460,
            5471
          ]
        }
      },
      "10": {},
      "11": {
        "AthenaWrap.precalculateTaxForWrap": {
          "20": [
            2447,
            2483
          ]
        },
        "AthenaWrap.totalUnwrapped": {
          "0": [
            1479,
            1501
          ]
        },
        "AthenaWrap.totalUnwrappedByAddress": {
          "37": [
            2088,
            2134
          ],
          "38": [
            2194,
            2235
          ]
        },
        "AthenaWrap.totalWrapped": {
          "5": [
            1283,
            1303
          ]
        },
        "AthenaWrap.totalWrappedByAddress": {
          "17": [
            1721,
            1767
          ],
          "18": [
            1827,
            1866
          ]
        },
        "AthenaWrap.unwrap": {
          "32": [
            3618,
            3653
          ],
          "33": [
            3877,
            3903
          ],
          "34": [
            3972,
            4019
          ],
          "35": [
            4088,
            4181
          ],
          "36": [
            4401,
            4433
          ]
        },
        "AthenaWrap.withdraw": {
          "14": [
            4595,
            4624
          ],
          "15": [
            4663,
            4670
          ],
          "16": [
            4856,
            4886
          ]
        },
        "AthenaWrap.wrap": {
          "25": [
            2793,
            2830
          ],
          "26": [
            3047,
            3058
          ],
          "27": [
            3123,
            3149
          ],
          "28": [
            3224,
            3271
          ],
          "29": [
            3316,
            3366
          ],
          "30": [
            3419,
            3451
          ]
        }
      },
      "12": {},
      "13": {},
      "2": {},
      "3": {},
      "4": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "AthenaEther",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/ERC20",
    "Guard",
    "IAthenaWrap",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Ownable"
  ],
  "deployedBytecode": "6080604052600436106101395760003560e01c80638da5cb5b116100ab578063afad55fd1161006f578063afad55fd1461034f578063d46eb11914610364578063dd62ed3e1461036c578063de0e9a3e1461038c578063e9b0e233146103ac578063f2fde38b146103cc57600080fd5b80638da5cb5b146102b25780638e765ea1146102da57806395d89b41146102fa578063a457c2d71461030f578063a9059cbb1461032f57600080fd5b8063313ce567116100fd578063313ce567146101f457806339509351146102105780633ccfd60b146102305780634581b2af1461024757806370a0823114610267578063715018a61461029d57600080fd5b806306fdde0314610145578063095ea7b3146101705780631303bfb0146101a057806318160ddd146101bf57806323b872dd146101d457600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5061015a6103ec565b6040516101679190610ebf565b60405180910390f35b34801561017c57600080fd5b5061019061018b366004610f29565b61047e565b6040519015158152602001610167565b3480156101ac57600080fd5b506007545b604051908152602001610167565b3480156101cb57600080fd5b506002546101b1565b3480156101e057600080fd5b506101906101ef366004610f53565b610498565b34801561020057600080fd5b5060405160128152602001610167565b34801561021c57600080fd5b5061019061022b366004610f29565b6104bc565b34801561023c57600080fd5b506102456104de565b005b34801561025357600080fd5b506101b1610262366004610f8f565b6105dd565b34801561027357600080fd5b506101b1610282366004610f8f565b6001600160a01b031660009081526020819052604090205490565b3480156102a957600080fd5b5061024561063f565b3480156102be57600080fd5b506005546040516001600160a01b039091168152602001610167565b3480156102e657600080fd5b506101b16102f5366004610faa565b610675565b34801561030657600080fd5b5061015a6106d6565b34801561031b57600080fd5b5061019061032a366004610f29565b6106e5565b34801561033b57600080fd5b5061019061034a366004610f29565b610760565b34801561035b57600080fd5b506006546101b1565b61024561076e565b34801561037857600080fd5b506101b1610387366004610fc3565b610857565b34801561039857600080fd5b506102456103a7366004610faa565b610882565b3480156103b857600080fd5b506101b16103c7366004610f8f565b610a04565b3480156103d857600080fd5b506102456103e7366004610f8f565b610a66565b6060600380546103fb90610ff6565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610ff6565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60003361048c818585610b01565b60019150505b92915050565b6000336104a6858285610c25565b6104b1858585610c9f565b506001949350505050565b60003361048c8185856104cf8383610857565b6104d99190611046565b610b01565b6005546001600160a01b031633146105115760405162461bcd60e51b815260040161050890611059565b60405180910390fd5b60085460000361054e5760405162461bcd60e51b81526020600482015260086024820152670546178203d3d20360c41b6044820152606401610508565b600060088190556005546040516001600160a01b039091169082908181818181875af1925050503d80600081146105a1576040519150601f19603f3d011682016040523d82523d6000602084013e6105a6565b606091505b50506008546040519192509033907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436490600090a350565b60006001600160a01b0382166106235760405162461bcd60e51b815260206004820152600b60248201526a307830204164647265737360a81b6044820152606401610508565b506001600160a01b031660009081526009602052604090205490565b6005546001600160a01b031633146106695760405162461bcd60e51b815260040161050890611059565b6106736000610e6d565b565b6000816000036106b55760405162461bcd60e51b815260206004820152600b60248201526a0416d6f756e74203d3d20360ac1b6044820152606401610508565b60006103e86106c584600161108e565b6106cf91906110a5565b9392505050565b6060600480546103fb90610ff6565b600033816106f38286610857565b9050838110156107535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610508565b6104b18286868403610b01565b60003361048c818585610c9f565b346000036107ab5760405162461bcd60e51b815260206004820152600a60248201526905772617070696e6720360b41b6044820152606401610508565b60006107b634610675565b905060006107c482346110c7565b905081600860008282546107d89190611046565b9250508190555034600660008282546107f19190611046565b90915550503360009081526009602052604081208054349290610815908490611046565b909155506108269050303383610c9f565b604051349033907fb61d00fdfee32467c7d81db64c811ae60c104c346debf36a14afe84b8fce59e590600090a35050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600554600160a01b900460ff16156108c55760405162461bcd60e51b8152602060048201526006602482015265131bd8dad95960d21b6044820152606401610508565b6005805460ff60a01b1916600160a01b17905560008190036109165760405162461bcd60e51b815260206004820152600a60248201526905772617070696e6720360b41b6044820152606401610508565b600061092182610675565b9050600061092f82846110c7565b905082600760008282546109439190611046565b9091555050336000908152600a602052604081208054859290610967908490611046565b909155506109789050333085610c9f565b604051600090339083908381818185875af1925050503d80600081146109ba576040519150601f19603f3d011682016040523d82523d6000602084013e6109bf565b606091505b5050604051909150849033907f5dd085b6070b4cae004f84daafd199fd55b0bdfa11c3a802baffe89c2419d8c290600090a350506005805460ff60a01b191690555050565b60006001600160a01b038216610a4a5760405162461bcd60e51b815260206004820152600b60248201526a307830204164647265737360a81b6044820152606401610508565b506001600160a01b03166000908152600a602052604090205490565b6005546001600160a01b03163314610a905760405162461bcd60e51b815260040161050890611059565b6001600160a01b038116610af55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610508565b610afe81610e6d565b50565b6001600160a01b038316610b635760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610508565b6001600160a01b038216610bc45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610508565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c318484610857565b90506000198114610c995781811015610c8c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610508565b610c998484848403610b01565b50505050565b6001600160a01b038316610d035760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610508565b6001600160a01b038216610d655760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610508565b6001600160a01b03831660009081526020819052604090205481811015610ddd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610508565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e14908490611046565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e6091815260200190565b60405180910390a3610c99565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610eec57858101830151858201604001528201610ed0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610f2457600080fd5b919050565b60008060408385031215610f3c57600080fd5b610f4583610f0d565b946020939093013593505050565b600080600060608486031215610f6857600080fd5b610f7184610f0d565b9250610f7f60208501610f0d565b9150604084013590509250925092565b600060208284031215610fa157600080fd5b6106cf82610f0d565b600060208284031215610fbc57600080fd5b5035919050565b60008060408385031215610fd657600080fd5b610fdf83610f0d565b9150610fed60208401610f0d565b90509250929050565b600181811c9082168061100a57607f821691505b60208210810361102a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561049257610492611030565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b808202811582820484141761049257610492611030565b6000826110c257634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104925761049261103056fea264697066735822122063b587df70c569ad6a42d6be42805094a7a7189a53da50fe4a85516519fccf7764736f6c63430008110033",
  "deployedSourceMap": "482:4413:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:1;;;;;:::i;:::-;;:::i;:::-;;;1169:14:14;;1162:22;1144:41;;1132:2;1117:18;4433:197:1;1004:187:14;1361:147:11;;;;;;;;;;-1:-1:-1;1486:15:11;;1361:147;;;1342:25:14;;;1330:2;1315:18;1361:147:11;1196:177:14;3244:106:1;;;;;;;;;;-1:-1:-1;3331:12:1;;3244:106;;5192:286;;;;;;;;;;-1:-1:-1;5192:286:1;;;;;:::i;:::-;;:::i;3093:91::-;;;;;;;;;;-1:-1:-1;3093:91:1;;3175:2;1853:36:14;;1841:2;1826:18;3093:91:1;1711:184:14;5873:234:1;;;;;;;;;;-1:-1:-1;5873:234:1;;;;;:::i;:::-;;:::i;4491:402:11:-;;;;;;;;;;;;;:::i;:::-;;1559:314;;;;;;;;;;-1:-1:-1;1559:314:11;;;;;:::i;:::-;;:::i;3408:125:1:-;;;;;;;;;;-1:-1:-1;3408:125:1;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;1668:101:0;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1108:6:0;;1036:85;;-1:-1:-1;;;;;1108:6:0;;;2237:51:14;;2225:2;2210:18;1036:85:0;2091:203:14;2293:362:11;;;;;;;;;;-1:-1:-1;2293:362:11;;;;;:::i;:::-;;:::i;2367:102:1:-;;;;;;;;;;;;;:::i;6594:427::-;;;;;;;;;;-1:-1:-1;6594:427:1;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;;;;;-1:-1:-1;3729:189:1;;;;;:::i;:::-;;:::i;1169:141:11:-;;;;;;;;;;-1:-1:-1;1290:13:11;;1169:141;;2706:752;;;:::i;3976:149:1:-;;;;;;;;;;-1:-1:-1;3976:149:1;;;;;:::i;:::-;;:::i;3509:931:11:-;;;;;;;;;;-1:-1:-1;3509:931:11;;;;;:::i;:::-;;:::i;1924:318::-;;;;;;;;;;-1:-1:-1;1924:318:11;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2156:98:1:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:4;4570:32:1;719:10:4;4586:7:1;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:4;5375:38:1;5391:4;719:10:4;5406:6:1;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;5873:234::-;5961:4;719:10:4;6015:64:1;719:10:4;6031:7:1;6068:10;6040:25;719:10:4;6031:7:1;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;4491:402:11:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;4603:3:11::1;;4610:1;4603:8:::0;4595:29:::1;;;::::0;-1:-1:-1;;;4595:29:11;;3959:2:14;4595:29:11::1;::::0;::::1;3941:21:14::0;3998:1;3978:18;;;3971:29;-1:-1:-1;;;4016:18:14;;;4009:38;4064:18;;4595:29:11::1;3757:331:14::0;4595:29:11::1;4669:1;4663:3;:7:::0;;;1108:6:0;;4737:37:11::1;::::0;-1:-1:-1;;;;;1108:6:0;;;;4669:1:11;;;4737:37;4669:1;4737:37;4669:1;1108:6:0;4737:37:11::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;4882:3:11::1;::::0;4861:25:::1;::::0;4721:53;;-1:-1:-1;4882:3:11;4870:10:::1;::::0;4861:25:::1;::::0;;;::::1;4528:365;4491:402::o:0;1559:314::-;1643:7;-1:-1:-1;;;;;1729:22:11;;1721:46;;;;-1:-1:-1;;;1721:46:11;;4505:2:14;1721:46:11;;;4487:21:14;4544:2;4524:18;;;4517:30;-1:-1:-1;;;4563:18:14;;;4556:41;4614:18;;1721:46:11;4303:335:14;1721:46:11;-1:-1:-1;;;;;;1834:32:11;;;;;:22;:32;;;;;;;1559:314::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2293:362:11:-;2377:7;2455;2466:1;2455:12;2447:36;;;;-1:-1:-1;;;2447:36:11;;4845:2:14;2447:36:11;;;4827:21:14;4884:2;4864:18;;;4857:30;-1:-1:-1;;;4903:18:14;;;4896:41;4954:18;;2447:36:11;4643:335:14;2447:36:11;2546:19;2584:4;2569:11;2573:7;2569:1;:11;:::i;:::-;2568:20;;;;:::i;:::-;2546:42;2293:362;-1:-1:-1;;;2293:362:11:o;2367:102:1:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:4;6687:4:1;6768:25;719:10:4;6785:7:1;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:1;;5580:2:14;6803:85:1;;;5562:21:14;5619:2;5599:18;;;5592:30;5658:34;5638:18;;;5631:62;-1:-1:-1;;;5709:18:14;;;5702:35;5754:19;;6803:85:1;5378:401:14;6803:85:1;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:4;3862:28:1;719:10:4;3879:2:1;3883:6;3862:9;:28::i;2706:752:11:-;2801:9;2814:1;2801:14;2793:37;;;;-1:-1:-1;;;2793:37:11;;5986:2:14;2793:37:11;;;5968:21:14;6025:2;6005:18;;;5998:30;-1:-1:-1;;;6044:18:14;;;6037:40;6094:18;;2793:37:11;5784:334:14;2793:37:11;2873:12;2888:33;2911:9;2888:22;:33::i;:::-;2873:48;-1:-1:-1;2962:20:11;2985:16;2873:48;2985:9;:16;:::i;:::-;2962:39;;3054:4;3047:3;;:11;;;;;;;:::i;:::-;;;;;;;;3140:9;3123:13;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;3247:10:11;3224:34;;;;:22;:34;;;;;:47;;3262:9;;3224:34;:47;;3262:9;;3224:47;:::i;:::-;;;;-1:-1:-1;3316:50:11;;-1:-1:-1;3334:4:11;3341:10;3353:12;3316:9;:50::i;:::-;3424:27;;3441:9;;3429:10;;3424:27;;;;;2737:721;;2706:752::o;3976:149:1:-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;3509:931:11:-;283:6:13;;-1:-1:-1;;;283:6:13;;;;282:7;274:26;;;;-1:-1:-1;;;274:26:13;;6458:2:14;274:26:13;;;6440:21:14;6497:1;6477:18;;;6470:29;-1:-1:-1;;;6515:18:14;;;6508:36;6561:18;;274:26:13;6256:329:14;274:26:13;310:6;:13;;-1:-1:-1;;;;310:13:13;-1:-1:-1;;;310:13:13;;;;3626:12:11;;;3618:35:::1;;;::::0;-1:-1:-1;;;3618:35:11;;5986:2:14;3618:35:11::1;::::0;::::1;5968:21:14::0;6025:2;6005:18;;;5998:30;-1:-1:-1;;;6044:18:14;;;6037:40;6094:18;;3618:35:11::1;5784:334:14::0;3618:35:11::1;3696:12;3711:31;3734:7;3711:22;:31::i;:::-;3696:46:::0;-1:-1:-1;3783:22:11::1;3808:14;3696:46:::0;3808:7;:14:::1;:::i;:::-;3783:39;;3896:7;3877:15;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3997:10:11::1;3972:36;::::0;;;:24:::1;:36;::::0;;;;:47;;4012:7;;3972:36;:47:::1;::::0;4012:7;;3972:47:::1;:::i;:::-;::::0;;;-1:-1:-1;4088:93:11::1;::::0;-1:-1:-1;4111:10:11::1;4144:4;4164:7:::0;4088:9:::1;:93::i;:::-;4270:51;::::0;4255:9:::1;::::0;4278:10:::1;::::0;4302:14;;4255:9;4270:51;4255:9;4270:51;4302:14;4278:10;4270:51:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;4406:27:11::1;::::0;4254:67;;-1:-1:-1;4425:7:11;;4413:10:::1;::::0;4406:27:::1;::::0;;;::::1;-1:-1:-1::0;;344:6:13;:14;;-1:-1:-1;;;;344:14:13;;;-1:-1:-1;;3509:931:11:o;1924:318::-;2010:7;-1:-1:-1;;;;;2096:22:11;;2088:46;;;;-1:-1:-1;;;2088:46:11;;4505:2:14;2088:46:11;;;4487:21:14;4544:2;4524:18;;;4517:30;-1:-1:-1;;;4563:18:14;;;4556:41;4614:18;;2088:46:11;4303:335:14;2088:46:11;-1:-1:-1;;;;;;2201:34:11;;;;;:24;:34;;;;;;;1924:318::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;6792:2:14;1998:73:0::1;::::0;::::1;6774:21:14::0;6831:2;6811:18;;;6804:30;6870:34;6850:18;;;6843:62;-1:-1:-1;;;6921:18:14;;;6914:36;6967:19;;1998:73:0::1;6590:402:14::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;10119:370:1:-;-1:-1:-1;;;;;10250:19:1;;10242:68;;;;-1:-1:-1;;;10242:68:1;;7199:2:14;10242:68:1;;;7181:21:14;7238:2;7218:18;;;7211:30;7277:34;7257:18;;;7250:62;-1:-1:-1;;;7328:18:14;;;7321:34;7372:19;;10242:68:1;6997:400:14;10242:68:1;-1:-1:-1;;;;;10328:21:1;;10320:68;;;;-1:-1:-1;;;10320:68:1;;7604:2:14;10320:68:1;;;7586:21:14;7643:2;7623:18;;;7616:30;7682:34;7662:18;;;7655:62;-1:-1:-1;;;7733:18:14;;;7726:32;7775:19;;10320:68:1;7402:398:14;10320:68:1;-1:-1:-1;;;;;10399:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;1342:25:14;;;10450:32:1;;1315:18:14;10450:32:1;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:1;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:1;;8007:2:14;11019:68:1;;;7989:21:14;8046:2;8026:18;;;8019:30;8085:31;8065:18;;;8058:59;8134:18;;11019:68:1;7805:353:14;11019:68:1;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:1;;7602:68;;;;-1:-1:-1;;;7602:68:1;;8365:2:14;7602:68:1;;;8347:21:14;8404:2;8384:18;;;8377:30;8443:34;8423:18;;;8416:62;-1:-1:-1;;;8494:18:14;;;8487:35;8539:19;;7602:68:1;8163:401:14;7602:68:1;-1:-1:-1;;;;;7688:16:1;;7680:64;;;;-1:-1:-1;;;7680:64:1;;8771:2:14;7680:64:1;;;8753:21:14;8810:2;8790:18;;;8783:30;8849:34;8829:18;;;8822:62;-1:-1:-1;;;8900:18:14;;;8893:33;8943:19;;7680:64:1;8569:399:14;7680:64:1;-1:-1:-1;;;;;7826:15:1;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:1;;9175:2:14;7851:72:1;;;9157:21:14;9214:2;9194:18;;;9187:30;9253:34;9233:18;;;9226:62;-1:-1:-1;;;9304:18:14;;;9297:36;9350:19;;7851:72:1;8973:402:14;7851:72:1;-1:-1:-1;;;;;7957:15:1;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:1;8063:4;-1:-1:-1;;;;;8054:26:1;;8073:6;8054:26;;;;1342:25:14;;1330:2;1315:18;;1196:177;8054:26:1;;;;;;;;8091:37;11795:121;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:548:14:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:14;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:14:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;2299:180::-;2358:6;2411:2;2399:9;2390:7;2386:23;2382:32;2379:52;;;2427:1;2424;2417:12;2379:52;-1:-1:-1;2450:23:14;;2299:180;-1:-1:-1;2299:180:14:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:127::-;3195:10;3190:3;3186:20;3183:1;3176:31;3226:4;3223:1;3216:15;3250:4;3247:1;3240:15;3266:125;3331:9;;;3352:10;;;3349:36;;;3365:18;;:::i;3396:356::-;3598:2;3580:21;;;3617:18;;;3610:30;3676:34;3671:2;3656:18;;3649:62;3743:2;3728:18;;3396:356::o;4983:168::-;5056:9;;;5087;;5104:15;;;5098:22;;5084:37;5074:71;;5125:18;;:::i;5156:217::-;5196:1;5222;5212:132;;5266:10;5261:3;5257:20;5254:1;5247:31;5301:4;5298:1;5291:15;5329:4;5326:1;5319:15;5212:132;-1:-1:-1;5358:9:14;;5156:217::o;6123:128::-;6190:9;;;6211:11;;;6208:37;;;6225:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "Anthony (fps) https://github.com/0xfps.",
    "details": "AthenaWrap, a simple wrapping protocol. It takes in ETH, MATIC or       AVAX, and sends AETH tokens to the caller.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "precalculateTaxForWrap(uint256)": {
        "details": "Returns the total amount of tax that will be charged for the wraping       of `_amount` amount of native tokens.",
        "params": {
          "_amount": "Amount to calculate."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "totalUnwrapped()": {
        "details": "Returns the total amount of native token unwrapped        by the `AthenaWrap` contract."
      },
      "totalUnwrappedByAddress(address)": {
        "details": "Returns the total number of native tokens unwrapped by `_address`       in the `AthenaWrap` contract.",
        "params": {
          "_address": "Address of unwrapper."
        }
      },
      "totalWrapped()": {
        "details": "Returns the total amount of native token wrapped        by the `AthenaWrap` contract."
      },
      "totalWrappedByAddress(address)": {
        "details": "Returns the total number of native tokens wrapped by `_address`       in the `AthenaWrap` contract.",
        "params": {
          "_address": "Address of wrapper."
        }
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unwrap(uint256)": {
        "details": "Unraps `_amount` amount of tokens, by transferring `_amount` amount       of native tokens to caller after deducting tax.       This function increments the `_totalUnwrapped` variable.       Emits an `Unwrap()` event.",
        "params": {
          "_amount": "Amount to unwrap."
        }
      },
      "withdraw()": {
        "details": "Transfers the total taxes to the protocol owner's address.       Emits a `Withdraw()` event."
      },
      "wrap()": {
        "details": "Wraps `msg.value` amount of tokens, by transferring `msg.value` amount        of AETH tokens after deducting tax.       This function increments the `_totalWrapped` variable.       Emits a `Wrap()` event."
      }
    },
    "stateVariables": {
      "_totalUnwrapped": {
        "details": "Tota unwrapped in the protocol."
      },
      "_totalUnwrappedByAddress": {
        "details": "Total amount unwrapped by an address in the protocol."
      },
      "_totalWrapped": {
        "details": "Total wrapped in the protocol."
      },
      "_totalWrappedByAddress": {
        "details": "Total amount wrapped by an address in the protocol."
      },
      "tax": {
        "details": "Protocol tax revenue."
      }
    },
    "title": "AthenaWrap.",
    "version": 1
  },
  "offset": [
    482,
    4895
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAFAD55FD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAFAD55FD EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xD46EB119 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xDE0E9A3E EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xE9B0E233 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x8E765EA1 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x4581B2AF EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x1303BFB0 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x140 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x4DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x63F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x6D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x1B1 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x76E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC3 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0xA04 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xFF6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48C DUP2 DUP6 DUP6 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4A6 DUP6 DUP3 DUP6 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x4B1 DUP6 DUP6 DUP6 PUSH2 0xC9F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48C DUP2 DUP6 DUP6 PUSH2 0x4CF DUP4 DUP4 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x546178203D3D203 PUSH1 0xC4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP2 DUP2 DUP2 DUP2 DUP2 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x3078302041646472657373 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x508 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH2 0x673 PUSH1 0x0 PUSH2 0xE6D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x416D6F756E74203D3D203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x6C5 DUP5 PUSH1 0x1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x6F3 DUP3 DUP7 PUSH2 0x857 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x508 JUMP JUMPDEST PUSH2 0x4B1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48C DUP2 DUP6 DUP6 PUSH2 0xC9F JUMP JUMPDEST CALLVALUE PUSH1 0x0 SUB PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x5772617070696E67203 PUSH1 0xB4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B6 CALLVALUE PUSH2 0x675 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C4 DUP3 CALLVALUE PUSH2 0x10C7 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x815 SWAP1 DUP5 SWAP1 PUSH2 0x1046 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x826 SWAP1 POP ADDRESS CALLER DUP4 PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE SWAP1 CALLER SWAP1 PUSH32 0xB61D00FDFEE32467C7D81DB64C811AE60C104C346DEBF36A14AFE84B8FCE59E5 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x131BD8DAD959 PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x5772617070696E67203 PUSH1 0xB4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x921 DUP3 PUSH2 0x675 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x92F DUP3 DUP5 PUSH2 0x10C7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x967 SWAP1 DUP5 SWAP1 PUSH2 0x1046 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x978 SWAP1 POP CALLER ADDRESS DUP6 PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP5 SWAP1 CALLER SWAP1 PUSH32 0x5DD085B6070B4CAE004F84DAAFD199FD55B0BDFA11C3A802BAFFE89C2419D8C2 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x3078302041646472657373 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x508 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x508 JUMP JUMPDEST PUSH2 0xAFE DUP2 PUSH2 0xE6D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC31 DUP5 DUP5 PUSH2 0x857 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC99 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x508 JUMP JUMPDEST PUSH2 0xC99 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xB01 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xDDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xE14 SWAP1 DUP5 SWAP1 PUSH2 0x1046 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE60 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEEC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xED0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF45 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF71 DUP5 PUSH2 0xF0D JUMP JUMPDEST SWAP3 POP PUSH2 0xF7F PUSH1 0x20 DUP6 ADD PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CF DUP3 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFDF DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0xFED PUSH1 0x20 DUP5 ADD PUSH2 0xF0D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x100A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x102A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x492 JUMPI PUSH2 0x492 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x492 JUMPI PUSH2 0x492 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10C2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x492 JUMPI PUSH2 0x492 PUSH2 0x1030 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xB587DF70 0xC5 PUSH10 0xAD6A42D6BE42805094A7 0xA7 XOR SWAP11 MSTORE8 0xDA POP INVALID 0x4A DUP6 MLOAD PUSH6 0x19FCCF776473 PUSH16 0x6C634300081100330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "LT",
      "path": "11"
    },
    "9": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x139"
    },
    "12": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "13": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "SHR",
      "path": "11"
    },
    "19": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "20": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8DA5CB5B"
    },
    "25": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "GT",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "30": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "31": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xAFAD55FD"
    },
    "36": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "GT",
      "path": "11"
    },
    "37": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "41": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "42": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xAFAD55FD"
    },
    "47": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "48": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x34F"
    },
    "51": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "52": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "53": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD46EB119"
    },
    "58": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "59": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x364"
    },
    "62": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "63": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "64": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDD62ED3E"
    },
    "69": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "70": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x36C"
    },
    "73": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "74": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "75": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDE0E9A3E"
    },
    "80": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "81": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x38C"
    },
    "84": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "85": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "86": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE9B0E233"
    },
    "91": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "92": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3AC"
    },
    "95": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "96": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "97": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF2FDE38B"
    },
    "102": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "103": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3CC"
    },
    "106": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "107": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "REVERT",
      "path": "11"
    },
    "111": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "112": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "113": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "119": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B2"
    },
    "122": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "123": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "124": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8E765EA1"
    },
    "129": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "130": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DA"
    },
    "133": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "134": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "135": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95D89B41"
    },
    "140": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "141": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2FA"
    },
    "144": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "145": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "146": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA457C2D7"
    },
    "151": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "152": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x30F"
    },
    "155": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "156": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "157": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA9059CBB"
    },
    "162": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "163": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32F"
    },
    "166": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "167": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "170": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "REVERT",
      "path": "11"
    },
    "171": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "172": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "173": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x313CE567"
    },
    "178": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "GT",
      "path": "11"
    },
    "179": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "183": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "184": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x313CE567"
    },
    "189": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "190": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F4"
    },
    "193": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "194": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "195": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x39509351"
    },
    "200": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "201": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x210"
    },
    "204": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "205": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "206": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3CCFD60B"
    },
    "211": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "212": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x230"
    },
    "215": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "216": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "217": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x4581B2AF"
    },
    "222": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "223": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x247"
    },
    "226": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "227": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "228": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "233": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "234": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x267"
    },
    "237": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "238": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "239": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x715018A6"
    },
    "244": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "245": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x29D"
    },
    "248": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "249": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "252": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "REVERT",
      "path": "11"
    },
    "253": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "254": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "255": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6FDDE03"
    },
    "260": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "261": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x145"
    },
    "264": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "265": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "266": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "271": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "272": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x170"
    },
    "275": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "276": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "277": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1303BFB0"
    },
    "282": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "283": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A0"
    },
    "286": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "287": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "288": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x18160DDD"
    },
    "293": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "294": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BF"
    },
    "297": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "298": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "299": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "304": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "EQ",
      "path": "11"
    },
    "305": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D4"
    },
    "308": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "309": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "311": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "312": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "REVERT",
      "path": "11"
    },
    "313": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "314": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "315": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x140"
    },
    "318": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "319": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "STOP",
      "path": "11"
    },
    "320": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "321": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "323": {
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "324": {
      "first_revert": true,
      "fn": null,
      "offset": [
        482,
        4895
      ],
      "op": "REVERT",
      "path": "11"
    },
    "325": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "326": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "328": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "329": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "332": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "333": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "336": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "REVERT",
      "path": "1"
    },
    "337": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "338": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "POP",
      "path": "1"
    },
    "339": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "342": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EC"
    },
    "345": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "1"
    },
    "346": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "347": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "350": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x167"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "354": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEBF"
    },
    "358": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "1"
    },
    "359": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "360": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "362": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "363": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "364": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "365": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "1"
    },
    "366": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "367": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "1"
    },
    "368": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "369": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "370": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "1"
    },
    "371": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "372": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17C"
    },
    "375": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "376": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "378": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "1"
    },
    "379": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "REVERT",
      "path": "1"
    },
    "380": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "381": {
      "op": "POP"
    },
    "382": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x190"
    },
    "385": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18B"
    },
    "388": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "389": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "391": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF29"
    },
    "394": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "1"
    },
    "395": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "396": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47E"
    },
    "399": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "1"
    },
    "400": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "401": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "403": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "404": {
      "op": "SWAP1"
    },
    "405": {
      "op": "ISZERO"
    },
    "406": {
      "op": "ISZERO"
    },
    "407": {
      "op": "DUP2"
    },
    "408": {
      "op": "MSTORE"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "op": "ADD"
    },
    "412": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x167"
    },
    "415": {
      "op": "JUMP"
    },
    "416": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "417": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "418": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "DUP1",
      "path": "11"
    },
    "419": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "420": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AC"
    },
    "423": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "424": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "426": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "DUP1",
      "path": "11"
    },
    "427": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "REVERT",
      "path": "11"
    },
    "428": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "429": {
      "op": "POP"
    },
    "430": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1486,
        1501
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x7"
    },
    "432": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1486,
        1501
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "433": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "434": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "436": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "DUP2"
    },
    "439": {
      "op": "MSTORE"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "442": {
      "op": "ADD"
    },
    "443": {
      "fn": "AthenaWrap.totalUnwrapped",
      "offset": [
        1361,
        1508
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x167"
    },
    "446": {
      "op": "JUMP"
    },
    "447": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "448": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "449": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "450": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "451": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CB"
    },
    "454": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "455": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "457": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "458": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "REVERT",
      "path": "1"
    },
    "459": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "460": {
      "op": "POP"
    },
    "461": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x2"
    },
    "463": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "464": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1"
    },
    "467": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "468": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "469": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "470": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "DUP1",
      "path": "1"
    },
    "471": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "472": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E0"
    },
    "475": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "476": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "478": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "DUP1",
      "path": "1"
    },
    "479": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "REVERT",
      "path": "1"
    },
    "480": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "481": {
      "op": "POP"
    },
    "482": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x190"
    },
    "485": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EF"
    },
    "488": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "489": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "491": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF53"
    },
    "494": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "1"
    },
    "495": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "496": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x498"
    },
    "499": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "1"
    },
    "500": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "501": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "502": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "1"
    },
    "503": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "504": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x200"
    },
    "507": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "508": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "510": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "1"
    },
    "511": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "REVERT",
      "path": "1"
    },
    "512": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "513": {
      "op": "POP"
    },
    "514": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "516": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "517": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x12"
    },
    "519": {
      "op": "DUP2"
    },
    "520": {
      "op": "MSTORE"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "523": {
      "op": "ADD"
    },
    "524": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x167"
    },
    "527": {
      "op": "JUMP"
    },
    "528": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "529": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "530": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "DUP1",
      "path": "1"
    },
    "531": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "532": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21C"
    },
    "535": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "536": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "538": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "DUP1",
      "path": "1"
    },
    "539": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "REVERT",
      "path": "1"
    },
    "540": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "541": {
      "op": "POP"
    },
    "542": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x190"
    },
    "545": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22B"
    },
    "548": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "549": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "551": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF29"
    },
    "554": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMP",
      "path": "1"
    },
    "555": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "556": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BC"
    },
    "559": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMP",
      "path": "1"
    },
    "560": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "561": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "562": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "DUP1",
      "path": "11"
    },
    "563": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "564": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x23C"
    },
    "567": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "568": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "570": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "DUP1",
      "path": "11"
    },
    "571": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "REVERT",
      "path": "11"
    },
    "572": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "573": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "POP",
      "path": "11"
    },
    "574": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x245"
    },
    "577": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4DE"
    },
    "580": {
      "fn": "AthenaWrap.withdraw",
      "jump": "i",
      "offset": [
        4491,
        4893
      ],
      "op": "JUMP",
      "path": "11"
    },
    "581": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "582": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "STOP",
      "path": "11"
    },
    "583": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "584": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "585": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "DUP1",
      "path": "11"
    },
    "586": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "587": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x253"
    },
    "590": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "591": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "593": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "DUP1",
      "path": "11"
    },
    "594": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "REVERT",
      "path": "11"
    },
    "595": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "596": {
      "op": "POP"
    },
    "597": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B1"
    },
    "600": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x262"
    },
    "603": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "604": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "606": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF8F"
    },
    "609": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "jump": "i",
      "offset": [
        1559,
        1873
      ],
      "op": "JUMP",
      "path": "11"
    },
    "610": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "611": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5DD"
    },
    "614": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "jump": "i",
      "offset": [
        1559,
        1873
      ],
      "op": "JUMP",
      "path": "11"
    },
    "615": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "616": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "617": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "618": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "619": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x273"
    },
    "622": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "623": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "625": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "626": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "REVERT",
      "path": "1"
    },
    "627": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1"
    },
    "632": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x282"
    },
    "635": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "636": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "638": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF8F"
    },
    "641": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "642": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "op": "SUB"
    },
    "651": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "1",
      "statement": 3
    },
    "652": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "654": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "655": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "656": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "657": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "659": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "660": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "661": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "662": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "664": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "665": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "666": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "667": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "668": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "669": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "670": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "671": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "672": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A9"
    },
    "676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "677": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63F"
    },
    "689": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "690": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "691": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "692": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "693": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "694": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE"
    },
    "697": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "698": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "700": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "701": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "702": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "703": {
      "op": "POP"
    },
    "704": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x5"
    },
    "706": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "707": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "709": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "op": "SUB"
    },
    "718": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "719": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "720": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "721": {
      "op": "DUP2"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "725": {
      "op": "ADD"
    },
    "726": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "729": {
      "op": "JUMP"
    },
    "730": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "731": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "732": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "DUP1",
      "path": "11"
    },
    "733": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "734": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E6"
    },
    "737": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "738": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "740": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "DUP1",
      "path": "11"
    },
    "741": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "REVERT",
      "path": "11"
    },
    "742": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "743": {
      "op": "POP"
    },
    "744": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B1"
    },
    "747": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F5"
    },
    "750": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "751": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "753": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFAA"
    },
    "756": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "jump": "i",
      "offset": [
        2293,
        2655
      ],
      "op": "JUMP",
      "path": "11"
    },
    "757": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "758": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x675"
    },
    "761": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "jump": "i",
      "offset": [
        2293,
        2655
      ],
      "op": "JUMP",
      "path": "11"
    },
    "762": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "763": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "764": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "1"
    },
    "765": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "766": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x306"
    },
    "769": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "770": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "772": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "1"
    },
    "773": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "REVERT",
      "path": "1"
    },
    "774": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "775": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "POP",
      "path": "1"
    },
    "776": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "779": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D6"
    },
    "782": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "1"
    },
    "783": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "784": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "787": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31B"
    },
    "790": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "793": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "REVERT",
      "path": "1"
    },
    "795": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "796": {
      "op": "POP"
    },
    "797": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x190"
    },
    "800": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32A"
    },
    "803": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "804": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "806": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF29"
    },
    "809": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMP",
      "path": "1"
    },
    "810": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "811": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6E5"
    },
    "814": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMP",
      "path": "1"
    },
    "815": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "816": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "817": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "818": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "819": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33B"
    },
    "822": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "823": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "825": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "DUP1",
      "path": "1"
    },
    "826": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "REVERT",
      "path": "1"
    },
    "827": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x190"
    },
    "832": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34A"
    },
    "835": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "836": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "838": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF29"
    },
    "841": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "1"
    },
    "842": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "843": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x760"
    },
    "846": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "1"
    },
    "847": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "848": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "849": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "DUP1",
      "path": "11"
    },
    "850": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "851": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x35B"
    },
    "854": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "855": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "857": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "DUP1",
      "path": "11"
    },
    "858": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "REVERT",
      "path": "11"
    },
    "859": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "860": {
      "op": "POP"
    },
    "861": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1290,
        1303
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 5,
      "value": "0x6"
    },
    "863": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1290,
        1303
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "864": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B1"
    },
    "867": {
      "fn": "AthenaWrap.totalWrapped",
      "offset": [
        1169,
        1310
      ],
      "op": "JUMP",
      "path": "11"
    },
    "868": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2706,
        3458
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "869": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2706,
        3458
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x245"
    },
    "872": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2706,
        3458
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x76E"
    },
    "875": {
      "fn": "AthenaWrap.wrap",
      "jump": "i",
      "offset": [
        2706,
        3458
      ],
      "op": "JUMP",
      "path": "11"
    },
    "876": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "877": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "878": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "879": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "880": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x378"
    },
    "883": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "884": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "886": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "887": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "REVERT",
      "path": "1"
    },
    "888": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "889": {
      "op": "POP"
    },
    "890": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1"
    },
    "893": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x387"
    },
    "896": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "897": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "899": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC3"
    },
    "902": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "903": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "904": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x857"
    },
    "907": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "908": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "909": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "910": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "DUP1",
      "path": "11"
    },
    "911": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "912": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x398"
    },
    "915": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "916": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "918": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "DUP1",
      "path": "11"
    },
    "919": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "REVERT",
      "path": "11"
    },
    "920": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x245"
    },
    "925": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A7"
    },
    "928": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "929": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "931": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFAA"
    },
    "934": {
      "fn": "AthenaWrap.unwrap",
      "jump": "i",
      "offset": [
        3509,
        4440
      ],
      "op": "JUMP",
      "path": "11"
    },
    "935": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "936": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x882"
    },
    "939": {
      "fn": "AthenaWrap.unwrap",
      "jump": "i",
      "offset": [
        3509,
        4440
      ],
      "op": "JUMP",
      "path": "11"
    },
    "940": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "941": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "942": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "DUP1",
      "path": "11"
    },
    "943": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "944": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B8"
    },
    "947": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "948": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "950": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "DUP1",
      "path": "11"
    },
    "951": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "REVERT",
      "path": "11"
    },
    "952": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "953": {
      "op": "POP"
    },
    "954": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B1"
    },
    "957": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C7"
    },
    "960": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "961": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "963": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF8F"
    },
    "966": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "jump": "i",
      "offset": [
        1924,
        2242
      ],
      "op": "JUMP",
      "path": "11"
    },
    "967": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "968": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA04"
    },
    "971": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "jump": "i",
      "offset": [
        1924,
        2242
      ],
      "op": "JUMP",
      "path": "11"
    },
    "972": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "973": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "974": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "976": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D8"
    },
    "979": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "980": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "982": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "983": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "985": {
      "op": "POP"
    },
    "986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E7"
    },
    "992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8F"
    },
    "998": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "999": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1000": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA66"
    },
    "1003": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1004": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1005": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1007": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x3"
    },
    "1009": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1010": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1011": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FB"
    },
    "1014": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1015": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF6"
    },
    "1018": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1019": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1020": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1021": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1023": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "1024": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1026": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1027": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1028": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "1"
    },
    "1029": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "1"
    },
    "1030": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1032": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "1033": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1035": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1036": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1037": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1038": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "1039": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1041": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1042": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1043": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1044": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1045": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1046": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1047": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1048": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1049": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1051": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "1052": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1053": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1054": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1055": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x427"
    },
    "1058": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1059": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF6"
    },
    "1062": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1063": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1064": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1065": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1066": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x474"
    },
    "1069": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1070": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1071": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1073": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "1"
    },
    "1074": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x449"
    },
    "1077": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1078": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1081": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1082": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1083": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1084": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "1"
    },
    "1085": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "1"
    },
    "1086": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1087": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1088": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1089": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1091": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "1092": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1093": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x474"
    },
    "1096": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1097": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1098": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1099": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "1100": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1101": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1102": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1104": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1105": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1107": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1109": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1110": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1111": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1112": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1113": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1114": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1115": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1116": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1117": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1119": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "1120": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1121": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1123": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "1124": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1125": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1126": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "1"
    },
    "1127": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x457"
    },
    "1130": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1131": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1132": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1133": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "1"
    },
    "1134": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1136": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "1"
    },
    "1137": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1138": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "1139": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1140": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1141": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "1142": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "1143": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "1144": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "1145": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "1146": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1147": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "1"
    },
    "1148": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1149": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1150": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1151": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1153": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 7
    },
    "1154": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 8,
      "value": "0x48C"
    },
    "1157": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1158": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1159": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1160": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB01"
    },
    "1163": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1164": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1165": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x1"
    },
    "1167": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1168": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "1"
    },
    "1169": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "1"
    },
    "1170": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1171": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1172": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1173": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "1"
    },
    "1174": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "1"
    },
    "1175": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1176": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1177": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1179": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x4A6"
    },
    "1183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5391,
        5395
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1184": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1185": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5406,
        5412
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1186": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC25"
    },
    "1189": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1190": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1191": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x4B1"
    },
    "1194": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5433,
        5437
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1195": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5439,
        5441
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1196": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1197": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5432
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9F"
    },
    "1200": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1201": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 12,
      "value": "0x1"
    },
    "1205": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1206": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "op": "POP"
    },
    "1210": {
      "op": "POP"
    },
    "1211": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1212": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6107
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1213": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1215": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1216": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6079
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x48C"
    },
    "1219": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1220": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6031,
        6038
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1221": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6068,
        6078
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1222": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CF"
    },
    "1225": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1226": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6031,
        6038
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1227": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6049
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x857"
    },
    "1230": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6065
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1231": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1232": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D9"
    },
    "1235": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1236": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1237": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1046"
    },
    "1240": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6078
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1241": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6078
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1242": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB01"
    },
    "1245": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6079
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1246": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4491,
        4893
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1247": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1249": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1259": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1260": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1261": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x511"
    },
    "1264": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1265": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1267": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1274": {
      "op": "SHL"
    },
    "1275": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1276": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1279": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1280": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x508"
    },
    "1283": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1284": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1059"
    },
    "1287": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1288": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1291": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1292": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1294": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "1295": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1297": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1298": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4603,
        4606
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 14,
      "value": "0x8"
    },
    "1300": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4603,
        4606
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1301": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4610,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1303": {
      "branch": 56,
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4603,
        4611
      ],
      "op": "SUB",
      "path": "11"
    },
    "1304": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x54E"
    },
    "1307": {
      "branch": 56,
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1308": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1310": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1319": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1322": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1324": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1325": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "ADD",
      "path": "11"
    },
    "1326": {
      "op": "MSTORE"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1331": {
      "op": "DUP3"
    },
    "1332": {
      "op": "ADD"
    },
    "1333": {
      "op": "MSTORE"
    },
    "1334": {
      "op": "PUSH8",
      "value": "0x546178203D3D203"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "1345": {
      "op": "SHL"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1348": {
      "op": "DUP3"
    },
    "1349": {
      "op": "ADD"
    },
    "1350": {
      "op": "MSTORE"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1353": {
      "op": "ADD"
    },
    "1354": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x508"
    },
    "1357": {
      "op": "JUMP"
    },
    "1358": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4595,
        4624
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1359": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4669,
        4670
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 15,
      "value": "0x0"
    },
    "1361": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4663,
        4666
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "1363": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4663,
        4670
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1364": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4663,
        4670
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1365": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4663,
        4670
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1366": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1368": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1369": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1371": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1381": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1382": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1383": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1384": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4669,
        4670
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1385": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4669,
        4670
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1386": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4669,
        4670
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1387": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1388": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4669,
        4670
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1389": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1390": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4669,
        4670
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1391": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1392": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "GAS",
      "path": "11"
    },
    "1393": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "CALL",
      "path": "11"
    },
    "1394": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1395": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "POP",
      "path": "11"
    },
    "1396": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "POP",
      "path": "11"
    },
    "1397": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "POP",
      "path": "11"
    },
    "1398": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1399": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1400": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1402": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1403": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "EQ",
      "path": "11"
    },
    "1404": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A1"
    },
    "1407": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1408": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1410": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1411": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1412": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "POP",
      "path": "11"
    },
    "1413": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1415": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "NOT",
      "path": "11"
    },
    "1416": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "1418": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1419": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "ADD",
      "path": "11"
    },
    "1420": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "AND",
      "path": "11"
    },
    "1421": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1422": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "ADD",
      "path": "11"
    },
    "1423": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1425": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1426": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1427": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1428": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1429": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1430": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1432": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1434": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1435": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "ADD",
      "path": "11"
    },
    "1436": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1437": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A6"
    },
    "1440": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1441": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1442": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1444": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1445": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "POP",
      "path": "11"
    },
    "1446": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4737,
        4774
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4882,
        4885
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 16,
      "value": "0x8"
    },
    "1451": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4882,
        4885
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1452": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4861,
        4886
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1454": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4861,
        4886
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1455": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4721,
        4774
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1456": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4721,
        4774
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4882,
        4885
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1459": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4870,
        4880
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1460": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4870,
        4880
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1461": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4861,
        4886
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
    },
    "1494": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4861,
        4886
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1495": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4861,
        4886
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1497": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4861,
        4886
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1498": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4861,
        4886
      ],
      "op": "LOG3",
      "path": "11"
    },
    "1499": {
      "fn": "AthenaWrap.withdraw",
      "offset": [
        4528,
        4893
      ],
      "op": "POP",
      "path": "11"
    },
    "1500": {
      "fn": "AthenaWrap.withdraw",
      "jump": "o",
      "offset": [
        4491,
        4893
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1501": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1559,
        1873
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1502": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1643,
        1650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "SUB"
    },
    "1512": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1729,
        1751
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 17
    },
    "1513": {
      "branch": 57,
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1729,
        1751
      ],
      "op": "AND",
      "path": "11"
    },
    "1514": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x623"
    },
    "1517": {
      "branch": 57,
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1518": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1520": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1529": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1532": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1534": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1535": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "ADD",
      "path": "11"
    },
    "1536": {
      "op": "MSTORE"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1541": {
      "op": "DUP3"
    },
    "1542": {
      "op": "ADD"
    },
    "1543": {
      "op": "MSTORE"
    },
    "1544": {
      "op": "PUSH11",
      "value": "0x3078302041646472657373"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1561": {
      "op": "DUP3"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x508"
    },
    "1570": {
      "op": "JUMP"
    },
    "1571": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1721,
        1767
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1572": {
      "op": "POP"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "op": "SUB"
    },
    "1581": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "AND",
      "path": "11",
      "statement": 18
    },
    "1582": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1584": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1585": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1586": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1587": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1856
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "1589": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1591": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1592": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1594": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1595": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1596": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1597": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "offset": [
        1834,
        1866
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1598": {
      "fn": "AthenaWrap.totalWrappedByAddress",
      "jump": "o",
      "offset": [
        1559,
        1873
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1600": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1602": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1609": {
      "op": "SHL"
    },
    "1610": {
      "op": "SUB"
    },
    "1611": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1612": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1613": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1614": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x669"
    },
    "1617": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1618": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1620": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1629": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1630": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1632": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1633": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x508"
    },
    "1636": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1637": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1059"
    },
    "1640": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1641": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1642": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x673"
    },
    "1645": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1647": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6D"
    },
    "1650": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1651": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1652": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1653": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1654": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2377,
        2384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1656": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2455,
        2462
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 20
    },
    "1657": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2466,
        2467
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1659": {
      "branch": 58,
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2455,
        2467
      ],
      "op": "SUB",
      "path": "11"
    },
    "1660": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6B5"
    },
    "1663": {
      "branch": 58,
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1664": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1666": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1675": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1678": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1680": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1681": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "ADD",
      "path": "11"
    },
    "1682": {
      "op": "MSTORE"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1687": {
      "op": "DUP3"
    },
    "1688": {
      "op": "ADD"
    },
    "1689": {
      "op": "MSTORE"
    },
    "1690": {
      "op": "PUSH11",
      "value": "0x416D6F756E74203D3D203"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xAC"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1707": {
      "op": "DUP3"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "op": "MSTORE"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1712": {
      "op": "ADD"
    },
    "1713": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x508"
    },
    "1716": {
      "op": "JUMP"
    },
    "1717": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2447,
        2483
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1718": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2546,
        2565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1720": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2584,
        2588
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E8"
    },
    "1723": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2569,
        2580
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6C5"
    },
    "1726": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2573,
        2580
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1727": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2569,
        2570
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1729": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2569,
        2580
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x108E"
    },
    "1732": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "jump": "i",
      "offset": [
        2569,
        2580
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1733": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2569,
        2580
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1734": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2568,
        2588
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6CF"
    },
    "1737": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2568,
        2588
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1738": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2568,
        2588
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1739": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2568,
        2588
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10A5"
    },
    "1742": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "jump": "i",
      "offset": [
        2568,
        2588
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1743": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2568,
        2588
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1744": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2546,
        2588
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1745": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "offset": [
        2293,
        2655
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1746": {
      "op": "POP"
    },
    "1747": {
      "op": "POP"
    },
    "1748": {
      "op": "POP"
    },
    "1749": {
      "fn": "AthenaWrap.precalculateTaxForWrap",
      "jump": "o",
      "offset": [
        2293,
        2655
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1750": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1751": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1753": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x4"
    },
    "1755": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1756": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1757": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FB"
    },
    "1760": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1761": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF6"
    },
    "1764": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1765": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6594,
        7021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1766": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6687,
        6691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1768": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1769": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6687,
        6691
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1770": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6768,
        6793
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F3"
    },
    "1773": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1774": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6785,
        6792
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1775": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6768,
        6777
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x857"
    },
    "1778": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6768,
        6793
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1779": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6768,
        6793
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1780": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6741,
        6793
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1781": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6741,
        6793
      ],
      "op": "POP",
      "path": "1"
    },
    "1782": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6831,
        6846
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 22
    },
    "1783": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6811,
        6827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1784": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6811,
        6846
      ],
      "op": "LT",
      "path": "1"
    },
    "1785": {
      "branch": 62,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6811,
        6846
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x753"
    },
    "1789": {
      "branch": 62,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1790": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1792": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1793": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1799": {
      "op": "SHL"
    },
    "1800": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1801": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1804": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1806": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1807": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "ADD",
      "path": "1"
    },
    "1808": {
      "op": "MSTORE"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1813": {
      "op": "DUP3"
    },
    "1814": {
      "op": "ADD"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "ADD"
    },
    "1853": {
      "op": "MSTORE"
    },
    "1854": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1865": {
      "op": "DUP3"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "op": "MSTORE"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1870": {
      "op": "ADD"
    },
    "1871": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "1874": {
      "op": "JUMP"
    },
    "1875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6803,
        6888
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6922,
        6982
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 23,
      "value": "0x4B1"
    },
    "1879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6931,
        6936
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6938,
        6945
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6966,
        6981
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6947,
        6963
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6947,
        6981
      ],
      "op": "SUB",
      "path": "1"
    },
    "1884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6922,
        6930
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB01"
    },
    "1887": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6922,
        6982
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1888": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1889": {
      "fn": "ERC20.transfer",
      "offset": [
        3808,
        3812
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1891": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1892": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3890
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 24,
      "value": "0x48C"
    },
    "1895": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1896": {
      "fn": "ERC20.transfer",
      "offset": [
        3879,
        3881
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1897": {
      "fn": "ERC20.transfer",
      "offset": [
        3883,
        3889
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1898": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3871
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9F"
    },
    "1901": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3862,
        3890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1902": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2706,
        3458
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1903": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2801,
        2810
      ],
      "op": "CALLVALUE",
      "path": "11",
      "statement": 25
    },
    "1904": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2814,
        2815
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1906": {
      "branch": 59,
      "fn": "AthenaWrap.wrap",
      "offset": [
        2801,
        2815
      ],
      "op": "SUB",
      "path": "11"
    },
    "1907": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7AB"
    },
    "1910": {
      "branch": 59,
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1911": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1913": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1922": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1925": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1927": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1928": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "ADD",
      "path": "11"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1934": {
      "op": "DUP3"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "op": "MSTORE"
    },
    "1937": {
      "op": "PUSH10",
      "value": "0x5772617070696E67203"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0xB4"
    },
    "1950": {
      "op": "SHL"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1953": {
      "op": "DUP3"
    },
    "1954": {
      "op": "ADD"
    },
    "1955": {
      "op": "MSTORE"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1958": {
      "op": "ADD"
    },
    "1959": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x508"
    },
    "1962": {
      "op": "JUMP"
    },
    "1963": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2793,
        2830
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1964": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2873,
        2885
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1966": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2888,
        2921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7B6"
    },
    "1969": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2911,
        2920
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "1970": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2888,
        2910
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x675"
    },
    "1973": {
      "fn": "AthenaWrap.wrap",
      "jump": "i",
      "offset": [
        2888,
        2921
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1974": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2888,
        2921
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1975": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2873,
        2921
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1976": {
      "op": "POP"
    },
    "1977": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2962,
        2982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1979": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2985,
        3001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C4"
    },
    "1982": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2873,
        2921
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1983": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2985,
        2994
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "1984": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2985,
        3001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10C7"
    },
    "1987": {
      "fn": "AthenaWrap.wrap",
      "jump": "i",
      "offset": [
        2985,
        3001
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1988": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2985,
        3001
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1989": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2962,
        3001
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1990": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2962,
        3001
      ],
      "op": "POP",
      "path": "11"
    },
    "1991": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3054,
        3058
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 26
    },
    "1992": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "1994": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1996": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1997": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1998": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1999": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7D8"
    },
    "2002": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2003": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2004": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1046"
    },
    "2007": {
      "fn": "AthenaWrap.wrap",
      "jump": "i",
      "offset": [
        3047,
        3058
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2008": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2009": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2010": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "POP",
      "path": "11"
    },
    "2011": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "POP",
      "path": "11"
    },
    "2012": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2013": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2014": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2015": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3047,
        3058
      ],
      "op": "POP",
      "path": "11"
    },
    "2016": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3140,
        3149
      ],
      "op": "CALLVALUE",
      "path": "11",
      "statement": 27
    },
    "2017": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3136
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "2019": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3136
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2021": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2022": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2023": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2024": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7F1"
    },
    "2027": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2028": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2029": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1046"
    },
    "2032": {
      "fn": "AthenaWrap.wrap",
      "jump": "i",
      "offset": [
        3123,
        3149
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2033": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2034": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2035": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2036": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3123,
        3149
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2037": {
      "op": "POP"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3247,
        3257
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 28
    },
    "2040": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2042": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2043": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2044": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2045": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3246
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "2047": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2049": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2050": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2052": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2053": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2054": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3271
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2055": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3271
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2056": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3262,
        3271
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "2057": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3262,
        3271
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2058": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3258
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2059": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3271
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x815"
    },
    "2062": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3271
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2063": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3262,
        3271
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2064": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3262,
        3271
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2065": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3271
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1046"
    },
    "2068": {
      "fn": "AthenaWrap.wrap",
      "jump": "i",
      "offset": [
        3224,
        3271
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2069": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3271
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2070": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3271
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2071": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3271
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2072": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3224,
        3271
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2073": {
      "op": "POP"
    },
    "2074": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3316,
        3366
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 29,
      "value": "0x826"
    },
    "2077": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3316,
        3366
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3334,
        3338
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "2080": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3341,
        3351
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2081": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3353,
        3365
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2082": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3316,
        3325
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC9F"
    },
    "2085": {
      "fn": "AthenaWrap.wrap",
      "jump": "i",
      "offset": [
        3316,
        3366
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2086": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3316,
        3366
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2087": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3424,
        3451
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 30,
      "value": "0x40"
    },
    "2089": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3424,
        3451
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2090": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3441,
        3450
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "2091": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3441,
        3450
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2092": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3429,
        3439
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2093": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3429,
        3439
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2094": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3424,
        3451
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xB61D00FDFEE32467C7D81DB64C811AE60C104C346DEBF36A14AFE84B8FCE59E5"
    },
    "2127": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3424,
        3451
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2128": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3424,
        3451
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2130": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3424,
        3451
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2131": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        3424,
        3451
      ],
      "op": "LOG3",
      "path": "11"
    },
    "2132": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2737,
        3458
      ],
      "op": "POP",
      "path": "11"
    },
    "2133": {
      "fn": "AthenaWrap.wrap",
      "offset": [
        2737,
        3458
      ],
      "op": "POP",
      "path": "11"
    },
    "2134": {
      "fn": "AthenaWrap.wrap",
      "jump": "o",
      "offset": [
        2706,
        3458
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2135": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "op": "SUB"
    },
    "2144": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 31
    },
    "2145": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2146": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "1"
    },
    "2147": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2149": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2150": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2151": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2152": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2154": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2156": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2157": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2158": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2159": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2161": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2162": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2163": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2164": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2165": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2166": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2167": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "1"
    },
    "2168": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2169": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2170": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2171": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2172": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2173": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2174": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2175": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2176": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2177": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2178": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3509,
        4440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2179": {
      "offset": [
        283,
        289
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "2181": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        283,
        289
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "offset": [
        283,
        289
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2188": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        283,
        289
      ],
      "op": "DIV",
      "path": "13"
    },
    "2189": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        283,
        289
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2191": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        283,
        289
      ],
      "op": "AND",
      "path": "13"
    },
    "2192": {
      "offset": [
        282,
        289
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2193": {
      "offset": [
        274,
        300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8C5"
    },
    "2196": {
      "offset": [
        274,
        300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2197": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        274,
        300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2199": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        274,
        300
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "offset": [
        274,
        300
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2208": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        274,
        300
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2211": {
      "offset": [
        274,
        300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2213": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        274,
        300
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2214": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        274,
        300
      ],
      "op": "ADD",
      "path": "13"
    },
    "2215": {
      "op": "MSTORE"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2220": {
      "op": "DUP3"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "op": "MSTORE"
    },
    "2223": {
      "op": "PUSH6",
      "value": "0x131BD8DAD959"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2235": {
      "op": "DUP3"
    },
    "2236": {
      "op": "ADD"
    },
    "2237": {
      "op": "MSTORE"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2240": {
      "op": "ADD"
    },
    "2241": {
      "offset": [
        274,
        300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x508"
    },
    "2244": {
      "op": "JUMP"
    },
    "2245": {
      "offset": [
        274,
        300
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2246": {
      "offset": [
        310,
        316
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "2248": {
      "offset": [
        310,
        323
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2249": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        310,
        323
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "op": "NOT"
    },
    "2256": {
      "offset": [
        310,
        323
      ],
      "op": "AND",
      "path": "13"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2261": {
      "op": "SHL"
    },
    "2262": {
      "offset": [
        310,
        323
      ],
      "op": "OR",
      "path": "13"
    },
    "2263": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        310,
        323
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2264": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        310,
        323
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2265": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        310,
        323
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2267": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3626,
        3638
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 32
    },
    "2268": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3626,
        3638
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2269": {
      "branch": 60,
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3626,
        3638
      ],
      "op": "SUB",
      "path": "11"
    },
    "2270": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x916"
    },
    "2273": {
      "branch": 60,
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2274": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2276": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2283": {
      "op": "SHL"
    },
    "2284": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2285": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2288": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2290": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2291": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "ADD",
      "path": "11"
    },
    "2292": {
      "op": "MSTORE"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2297": {
      "op": "DUP3"
    },
    "2298": {
      "op": "ADD"
    },
    "2299": {
      "op": "MSTORE"
    },
    "2300": {
      "op": "PUSH10",
      "value": "0x5772617070696E67203"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xB4"
    },
    "2313": {
      "op": "SHL"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2316": {
      "op": "DUP3"
    },
    "2317": {
      "op": "ADD"
    },
    "2318": {
      "op": "MSTORE"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2321": {
      "op": "ADD"
    },
    "2322": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x508"
    },
    "2325": {
      "op": "JUMP"
    },
    "2326": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3618,
        3653
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2327": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3696,
        3708
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2329": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3711,
        3742
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x921"
    },
    "2332": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3734,
        3741
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2333": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3711,
        3733
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x675"
    },
    "2336": {
      "fn": "AthenaWrap.unwrap",
      "jump": "i",
      "offset": [
        3711,
        3742
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2337": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3711,
        3742
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2338": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3696,
        3742
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2339": {
      "op": "POP"
    },
    "2340": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3783,
        3805
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2342": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3808,
        3822
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x92F"
    },
    "2345": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3696,
        3742
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2346": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3808,
        3815
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2347": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3808,
        3822
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10C7"
    },
    "2350": {
      "fn": "AthenaWrap.unwrap",
      "jump": "i",
      "offset": [
        3808,
        3822
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2351": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3808,
        3822
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2352": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3783,
        3822
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2353": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3783,
        3822
      ],
      "op": "POP",
      "path": "11"
    },
    "2354": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3896,
        3903
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 33
    },
    "2355": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3892
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "2357": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3892
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2359": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2360": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2361": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2362": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x943"
    },
    "2365": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2366": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2367": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1046"
    },
    "2370": {
      "fn": "AthenaWrap.unwrap",
      "jump": "i",
      "offset": [
        3877,
        3903
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2371": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2372": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2373": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2374": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3877,
        3903
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2375": {
      "op": "POP"
    },
    "2376": {
      "op": "POP"
    },
    "2377": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3997,
        4007
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 34
    },
    "2378": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2380": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2381": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2382": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2383": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        3996
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "2385": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2387": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2388": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2390": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2391": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2392": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4019
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2393": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4019
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2394": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4012,
        4019
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2395": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4012,
        4019
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2396": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4008
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2397": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4019
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x967"
    },
    "2400": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4019
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2401": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4012,
        4019
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2402": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4012,
        4019
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2403": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4019
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1046"
    },
    "2406": {
      "fn": "AthenaWrap.unwrap",
      "jump": "i",
      "offset": [
        3972,
        4019
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2407": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4019
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2408": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4019
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2409": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4019
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2410": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        3972,
        4019
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2411": {
      "op": "POP"
    },
    "2412": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4088,
        4181
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 35,
      "value": "0x978"
    },
    "2415": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4088,
        4181
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4111,
        4121
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2418": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4144,
        4148
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "2419": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4164,
        4171
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2420": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4088,
        4097
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC9F"
    },
    "2423": {
      "fn": "AthenaWrap.unwrap",
      "jump": "i",
      "offset": [
        4088,
        4181
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2424": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4088,
        4181
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2425": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2427": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2428": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4255,
        4264
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2430": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4255,
        4264
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2431": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4278,
        4288
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2432": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4278,
        4288
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2433": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4302,
        4316
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2434": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4302,
        4316
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2435": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4255,
        4264
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2436": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2437": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4255,
        4264
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2438": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2439": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4302,
        4316
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2440": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4278,
        4288
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2441": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "GAS",
      "path": "11"
    },
    "2442": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "CALL",
      "path": "11"
    },
    "2443": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2444": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "POP",
      "path": "11"
    },
    "2445": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "POP",
      "path": "11"
    },
    "2446": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "POP",
      "path": "11"
    },
    "2447": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2448": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2449": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2451": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2452": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "EQ",
      "path": "11"
    },
    "2453": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9BA"
    },
    "2456": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2457": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2459": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2460": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2461": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "POP",
      "path": "11"
    },
    "2462": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2464": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "NOT",
      "path": "11"
    },
    "2465": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "2467": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2468": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "ADD",
      "path": "11"
    },
    "2469": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "AND",
      "path": "11"
    },
    "2470": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2471": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "ADD",
      "path": "11"
    },
    "2472": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2474": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2475": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2476": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2477": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2478": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2479": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2481": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2483": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2484": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "ADD",
      "path": "11"
    },
    "2485": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2486": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9BF"
    },
    "2489": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2490": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2491": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "2493": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2494": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "POP",
      "path": "11"
    },
    "2495": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4270,
        4321
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2496": {
      "op": "POP"
    },
    "2497": {
      "op": "POP"
    },
    "2498": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4406,
        4433
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 36,
      "value": "0x40"
    },
    "2500": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4406,
        4433
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2501": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4254,
        4321
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2502": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4254,
        4321
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2503": {
      "op": "POP"
    },
    "2504": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4425,
        4432
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2505": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4425,
        4432
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2506": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4413,
        4423
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2507": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4413,
        4423
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2508": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4406,
        4433
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x5DD085B6070B4CAE004F84DAAFD199FD55B0BDFA11C3A802BAFFE89C2419D8C2"
    },
    "2541": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4406,
        4433
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2542": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4406,
        4433
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2544": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4406,
        4433
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2545": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        4406,
        4433
      ],
      "op": "LOG3",
      "path": "11"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "op": "POP"
    },
    "2548": {
      "offset": [
        344,
        350
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "2550": {
      "offset": [
        344,
        358
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2551": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        344,
        358
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2556": {
      "op": "SHL"
    },
    "2557": {
      "op": "NOT"
    },
    "2558": {
      "offset": [
        344,
        358
      ],
      "op": "AND",
      "path": "13"
    },
    "2559": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        344,
        358
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2560": {
      "fn": "AthenaWrap.unwrap",
      "offset": [
        344,
        358
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "op": "POP"
    },
    "2563": {
      "fn": "AthenaWrap.unwrap",
      "jump": "o",
      "offset": [
        3509,
        4440
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2564": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        1924,
        2242
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2565": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2010,
        2017
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2573": {
      "op": "SHL"
    },
    "2574": {
      "op": "SUB"
    },
    "2575": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2096,
        2118
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 37
    },
    "2576": {
      "branch": 61,
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2096,
        2118
      ],
      "op": "AND",
      "path": "11"
    },
    "2577": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4A"
    },
    "2580": {
      "branch": 61,
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2581": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2583": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2592": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2595": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2597": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2598": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "ADD",
      "path": "11"
    },
    "2599": {
      "op": "MSTORE"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2604": {
      "op": "DUP3"
    },
    "2605": {
      "op": "ADD"
    },
    "2606": {
      "op": "MSTORE"
    },
    "2607": {
      "op": "PUSH11",
      "value": "0x3078302041646472657373"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2624": {
      "op": "DUP3"
    },
    "2625": {
      "op": "ADD"
    },
    "2626": {
      "op": "MSTORE"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2629": {
      "op": "ADD"
    },
    "2630": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x508"
    },
    "2633": {
      "op": "JUMP"
    },
    "2634": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2088,
        2134
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2635": {
      "op": "POP"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "op": "SUB"
    },
    "2644": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "AND",
      "path": "11",
      "statement": 38
    },
    "2645": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2647": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2648": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2649": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2650": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2225
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "2652": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2654": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2655": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2657": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2658": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2659": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2660": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "offset": [
        2201,
        2235
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2661": {
      "fn": "AthenaWrap.totalUnwrappedByAddress",
      "jump": "o",
      "offset": [
        1924,
        2242
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2662": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2663": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2665": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2672": {
      "op": "SHL"
    },
    "2673": {
      "op": "SUB"
    },
    "2674": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2675": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2676": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2677": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA90"
    },
    "2680": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2681": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2683": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2690": {
      "op": "SHL"
    },
    "2691": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2692": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2693": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2695": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x508"
    },
    "2699": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1059"
    },
    "2703": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2704": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2711": {
      "op": "SHL"
    },
    "2712": {
      "op": "SUB"
    },
    "2713": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 39
    },
    "2714": {
      "branch": 70,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2715": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF5"
    },
    "2718": {
      "branch": 70,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2728": {
      "op": "SHL"
    },
    "2729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2735": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2736": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2737": {
      "op": "MSTORE"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2742": {
      "op": "DUP3"
    },
    "2743": {
      "op": "ADD"
    },
    "2744": {
      "op": "MSTORE"
    },
    "2745": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2780": {
      "op": "DUP3"
    },
    "2781": {
      "op": "ADD"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2795": {
      "op": "DUP3"
    },
    "2796": {
      "op": "ADD"
    },
    "2797": {
      "op": "MSTORE"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2800": {
      "op": "ADD"
    },
    "2801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x508"
    },
    "2804": {
      "op": "JUMP"
    },
    "2805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2806": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0xAFE"
    },
    "2809": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6D"
    },
    "2813": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2816": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2817": {
      "fn": "ERC20._approve",
      "offset": [
        10119,
        10489
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2824": {
      "op": "SHL"
    },
    "2825": {
      "op": "SUB"
    },
    "2826": {
      "fn": "ERC20._approve",
      "offset": [
        10250,
        10269
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 41
    },
    "2827": {
      "branch": 63,
      "fn": "ERC20._approve",
      "offset": [
        10250,
        10269
      ],
      "op": "AND",
      "path": "1"
    },
    "2828": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB63"
    },
    "2831": {
      "branch": 63,
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2832": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2834": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2843": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2846": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2848": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2849": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "ADD",
      "path": "1"
    },
    "2850": {
      "op": "MSTORE"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2853": {
      "op": "DUP1"
    },
    "2854": {
      "op": "DUP3"
    },
    "2855": {
      "op": "ADD"
    },
    "2856": {
      "op": "MSTORE"
    },
    "2857": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2892": {
      "op": "DUP3"
    },
    "2893": {
      "op": "ADD"
    },
    "2894": {
      "op": "MSTORE"
    },
    "2895": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2905": {
      "op": "DUP3"
    },
    "2906": {
      "op": "ADD"
    },
    "2907": {
      "op": "MSTORE"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2910": {
      "op": "ADD"
    },
    "2911": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "2914": {
      "op": "JUMP"
    },
    "2915": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10310
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "op": "SUB"
    },
    "2924": {
      "fn": "ERC20._approve",
      "offset": [
        10328,
        10349
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 42
    },
    "2925": {
      "branch": 64,
      "fn": "ERC20._approve",
      "offset": [
        10328,
        10349
      ],
      "op": "AND",
      "path": "1"
    },
    "2926": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBC4"
    },
    "2929": {
      "branch": 64,
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2930": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2932": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2941": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2944": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2946": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2947": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "ADD",
      "path": "1"
    },
    "2948": {
      "op": "MSTORE"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2953": {
      "op": "DUP3"
    },
    "2954": {
      "op": "ADD"
    },
    "2955": {
      "op": "MSTORE"
    },
    "2956": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2991": {
      "op": "DUP3"
    },
    "2992": {
      "op": "ADD"
    },
    "2993": {
      "op": "MSTORE"
    },
    "2994": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2999": {
      "op": "SHL"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3002": {
      "op": "DUP3"
    },
    "3003": {
      "op": "ADD"
    },
    "3004": {
      "op": "MSTORE"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3007": {
      "op": "ADD"
    },
    "3008": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "3011": {
      "op": "JUMP"
    },
    "3012": {
      "fn": "ERC20._approve",
      "offset": [
        10320,
        10388
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3019": {
      "op": "SHL"
    },
    "3020": {
      "op": "SUB"
    },
    "3021": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 43
    },
    "3022": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3023": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "AND",
      "path": "1"
    },
    "3024": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3026": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3027": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3028": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3029": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3031": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3033": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3034": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3035": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3036": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3038": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3039": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3040": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10417
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3041": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3042": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3043": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "AND",
      "path": "1"
    },
    "3044": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3045": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3046": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3047": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3048": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3049": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3050": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3051": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3052": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3053": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10426
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3054": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10435
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3055": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10435
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3056": {
      "fn": "ERC20._approve",
      "offset": [
        10399,
        10435
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3057": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 44
    },
    "3058": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3059": {
      "op": "DUP5"
    },
    "3060": {
      "op": "DUP2"
    },
    "3061": {
      "op": "MSTORE"
    },
    "3062": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3095": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3096": {
      "op": "ADD"
    },
    "3097": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3099": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3100": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3101": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3102": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SUB",
      "path": "1"
    },
    "3103": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3104": {
      "fn": "ERC20._approve",
      "offset": [
        10450,
        10482
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3105": {
      "fn": "ERC20._approve",
      "offset": [
        10119,
        10489
      ],
      "op": "POP",
      "path": "1"
    },
    "3106": {
      "fn": "ERC20._approve",
      "offset": [
        10119,
        10489
      ],
      "op": "POP",
      "path": "1"
    },
    "3107": {
      "fn": "ERC20._approve",
      "offset": [
        10119,
        10489
      ],
      "op": "POP",
      "path": "1"
    },
    "3108": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10119,
        10489
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3109": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3110": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3112": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10927,
        10952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC31"
    },
    "3115": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10937,
        10942
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3116": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10944,
        10951
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3117": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10927,
        10936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x857"
    },
    "3120": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        10927,
        10952
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3121": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10927,
        10952
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3122": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10952
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3123": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10952
      ],
      "op": "POP",
      "path": "1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3126": {
      "op": "NOT"
    },
    "3127": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        10982
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3128": {
      "branch": 65,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "1"
    },
    "3129": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC99"
    },
    "3132": {
      "branch": 65,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3133": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 45
    },
    "3134": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3135": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "1"
    },
    "3136": {
      "branch": 66,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3137": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC8C"
    },
    "3140": {
      "branch": 66,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3141": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3143": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3150": {
      "op": "SHL"
    },
    "3151": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3152": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3155": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3157": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3158": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "1"
    },
    "3159": {
      "op": "MSTORE"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3164": {
      "op": "DUP3"
    },
    "3165": {
      "op": "ADD"
    },
    "3166": {
      "op": "MSTORE"
    },
    "3167": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3202": {
      "op": "DUP3"
    },
    "3203": {
      "op": "ADD"
    },
    "3204": {
      "op": "MSTORE"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3207": {
      "op": "ADD"
    },
    "3208": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "3211": {
      "op": "JUMP"
    },
    "3212": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3213": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 46,
      "value": "0xC99"
    },
    "3216": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3217": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3218": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3219": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3220": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "1"
    },
    "3221": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB01"
    },
    "3224": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3225": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3226": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10890,
        11211
      ],
      "op": "POP",
      "path": "1"
    },
    "3227": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "1"
    },
    "3228": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "1"
    },
    "3229": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "1"
    },
    "3230": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3231": {
      "fn": "ERC20._transfer",
      "offset": [
        7484,
        8135
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3238": {
      "op": "SHL"
    },
    "3239": {
      "op": "SUB"
    },
    "3240": {
      "fn": "ERC20._transfer",
      "offset": [
        7610,
        7628
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 47
    },
    "3241": {
      "branch": 67,
      "fn": "ERC20._transfer",
      "offset": [
        7610,
        7628
      ],
      "op": "AND",
      "path": "1"
    },
    "3242": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD03"
    },
    "3245": {
      "branch": 67,
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3246": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3248": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3255": {
      "op": "SHL"
    },
    "3256": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3257": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3260": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3262": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3263": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "ADD",
      "path": "1"
    },
    "3264": {
      "op": "MSTORE"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3269": {
      "op": "DUP3"
    },
    "3270": {
      "op": "ADD"
    },
    "3271": {
      "op": "MSTORE"
    },
    "3272": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3307": {
      "op": "DUP3"
    },
    "3308": {
      "op": "ADD"
    },
    "3309": {
      "op": "MSTORE"
    },
    "3310": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3318": {
      "op": "SHL"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3321": {
      "op": "DUP3"
    },
    "3322": {
      "op": "ADD"
    },
    "3323": {
      "op": "MSTORE"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3326": {
      "op": "ADD"
    },
    "3327": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "3330": {
      "op": "JUMP"
    },
    "3331": {
      "fn": "ERC20._transfer",
      "offset": [
        7602,
        7670
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3338": {
      "op": "SHL"
    },
    "3339": {
      "op": "SUB"
    },
    "3340": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7704
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 48
    },
    "3341": {
      "branch": 68,
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7704
      ],
      "op": "AND",
      "path": "1"
    },
    "3342": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD65"
    },
    "3345": {
      "branch": 68,
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3346": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3348": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3355": {
      "op": "SHL"
    },
    "3356": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3357": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3360": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3362": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3363": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "ADD",
      "path": "1"
    },
    "3364": {
      "op": "MSTORE"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3369": {
      "op": "DUP3"
    },
    "3370": {
      "op": "ADD"
    },
    "3371": {
      "op": "MSTORE"
    },
    "3372": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3407": {
      "op": "DUP3"
    },
    "3408": {
      "op": "ADD"
    },
    "3409": {
      "op": "MSTORE"
    },
    "3410": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3416": {
      "op": "SHL"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3419": {
      "op": "DUP3"
    },
    "3420": {
      "op": "ADD"
    },
    "3421": {
      "op": "MSTORE"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "3428": {
      "op": "JUMP"
    },
    "3429": {
      "fn": "ERC20._transfer",
      "offset": [
        7680,
        7744
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3436": {
      "op": "SHL"
    },
    "3437": {
      "op": "SUB"
    },
    "3438": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3439": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "AND",
      "path": "1"
    },
    "3440": {
      "fn": "ERC20._transfer",
      "offset": [
        7804,
        7823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3442": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3443": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3444": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3445": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3447": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3448": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3449": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3450": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3452": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3453": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3454": {
      "fn": "ERC20._transfer",
      "offset": [
        7826,
        7841
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3455": {
      "fn": "ERC20._transfer",
      "offset": [
        7859,
        7880
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 49
    },
    "3456": {
      "fn": "ERC20._transfer",
      "offset": [
        7859,
        7880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3457": {
      "fn": "ERC20._transfer",
      "offset": [
        7859,
        7880
      ],
      "op": "LT",
      "path": "1"
    },
    "3458": {
      "branch": 69,
      "fn": "ERC20._transfer",
      "offset": [
        7859,
        7880
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3459": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDDD"
    },
    "3462": {
      "branch": 69,
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3463": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3465": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3474": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3477": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3479": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3480": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "ADD",
      "path": "1"
    },
    "3481": {
      "op": "MSTORE"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3486": {
      "op": "DUP3"
    },
    "3487": {
      "op": "ADD"
    },
    "3488": {
      "op": "MSTORE"
    },
    "3489": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3524": {
      "op": "DUP3"
    },
    "3525": {
      "op": "ADD"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3536": {
      "op": "SHL"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3539": {
      "op": "DUP3"
    },
    "3540": {
      "op": "ADD"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3544": {
      "op": "ADD"
    },
    "3545": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "3548": {
      "op": "JUMP"
    },
    "3549": {
      "fn": "ERC20._transfer",
      "offset": [
        7851,
        7923
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3556": {
      "op": "SHL"
    },
    "3557": {
      "op": "SUB"
    },
    "3558": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 50
    },
    "3559": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3560": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "AND",
      "path": "1"
    },
    "3561": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7966
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3563": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3564": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3565": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3566": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3568": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3569": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3570": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3571": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3573": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3574": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3575": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3576": {
      "fn": "ERC20._transfer",
      "offset": [
        7975,
        7995
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3577": {
      "fn": "ERC20._transfer",
      "offset": [
        7975,
        7995
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3578": {
      "fn": "ERC20._transfer",
      "offset": [
        7975,
        7995
      ],
      "op": "SUB",
      "path": "1"
    },
    "3579": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7995
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3580": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7995
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3581": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 51
    },
    "3582": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3583": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "AND",
      "path": "1"
    },
    "3584": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3585": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3586": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3587": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3588": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8028
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3589": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3590": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3591": {
      "fn": "ERC20._transfer",
      "offset": [
        7989,
        7995
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3592": {
      "fn": "ERC20._transfer",
      "offset": [
        7989,
        7995
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3593": {
      "fn": "ERC20._transfer",
      "offset": [
        7957,
        7966
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3594": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE14"
    },
    "3597": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3598": {
      "fn": "ERC20._transfer",
      "offset": [
        7989,
        7995
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3599": {
      "fn": "ERC20._transfer",
      "offset": [
        7989,
        7995
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3600": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1046"
    },
    "3603": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8015,
        8038
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3604": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3605": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3606": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "POP",
      "path": "1"
    },
    "3607": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "POP",
      "path": "1"
    },
    "3608": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3609": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3610": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3611": {
      "fn": "ERC20._transfer",
      "offset": [
        8015,
        8038
      ],
      "op": "POP",
      "path": "1"
    },
    "3612": {
      "fn": "ERC20._transfer",
      "offset": [
        8069,
        8071
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 52
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3619": {
      "op": "SHL"
    },
    "3620": {
      "op": "SUB"
    },
    "3621": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "AND",
      "path": "1"
    },
    "3622": {
      "fn": "ERC20._transfer",
      "offset": [
        8063,
        8067
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3629": {
      "op": "SHL"
    },
    "3630": {
      "op": "SUB"
    },
    "3631": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "AND",
      "path": "1"
    },
    "3632": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3665": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8079
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3666": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3668": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3669": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE60"
    },
    "3672": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3673": {
      "op": "DUP2"
    },
    "3674": {
      "op": "MSTORE"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3677": {
      "op": "ADD"
    },
    "3678": {
      "op": "SWAP1"
    },
    "3679": {
      "op": "JUMP"
    },
    "3680": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3681": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3683": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3684": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3685": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3686": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "SUB",
      "path": "1"
    },
    "3687": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3688": {
      "fn": "ERC20._transfer",
      "offset": [
        8054,
        8080
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3689": {
      "fn": "ERC20._transfer",
      "offset": [
        8091,
        8128
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 53,
      "value": "0xC99"
    },
    "3692": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        11795,
        11916
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3693": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3694": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3696": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3697": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3704": {
      "op": "SHL"
    },
    "3705": {
      "op": "SUB"
    },
    "3706": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 54
    },
    "3707": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3708": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3715": {
      "op": "SHL"
    },
    "3716": {
      "op": "SUB"
    },
    "3717": {
      "op": "NOT"
    },
    "3718": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3719": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3720": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3721": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3722": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3723": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3724": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3725": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0x40"
    },
    "3727": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3728": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3729": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3730": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3731": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3732": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3733": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3734": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3767": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3768": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3770": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3771": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3772": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3773": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3774": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3775": {
      "op": "JUMPDEST"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3780": {
      "op": "DUP1"
    },
    "3781": {
      "op": "DUP4"
    },
    "3782": {
      "op": "MSTORE"
    },
    "3783": {
      "op": "DUP4"
    },
    "3784": {
      "op": "MLOAD"
    },
    "3785": {
      "op": "DUP1"
    },
    "3786": {
      "op": "DUP3"
    },
    "3787": {
      "op": "DUP6"
    },
    "3788": {
      "op": "ADD"
    },
    "3789": {
      "op": "MSTORE"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "JUMPDEST"
    },
    "3793": {
      "op": "DUP2"
    },
    "3794": {
      "op": "DUP2"
    },
    "3795": {
      "op": "LT"
    },
    "3796": {
      "op": "ISZERO"
    },
    "3797": {
      "op": "PUSH2",
      "value": "0xEEC"
    },
    "3800": {
      "op": "JUMPI"
    },
    "3801": {
      "op": "DUP6"
    },
    "3802": {
      "op": "DUP2"
    },
    "3803": {
      "op": "ADD"
    },
    "3804": {
      "op": "DUP4"
    },
    "3805": {
      "op": "ADD"
    },
    "3806": {
      "op": "MLOAD"
    },
    "3807": {
      "op": "DUP6"
    },
    "3808": {
      "op": "DUP3"
    },
    "3809": {
      "op": "ADD"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3812": {
      "op": "ADD"
    },
    "3813": {
      "op": "MSTORE"
    },
    "3814": {
      "op": "DUP3"
    },
    "3815": {
      "op": "ADD"
    },
    "3816": {
      "op": "PUSH2",
      "value": "0xED0"
    },
    "3819": {
      "op": "JUMP"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "POP"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3826": {
      "op": "DUP3"
    },
    "3827": {
      "op": "DUP7"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "op": "MSTORE"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3835": {
      "op": "NOT"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3838": {
      "op": "DUP4"
    },
    "3839": {
      "op": "ADD"
    },
    "3840": {
      "op": "AND"
    },
    "3841": {
      "op": "DUP6"
    },
    "3842": {
      "op": "ADD"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "SWAP3"
    },
    "3845": {
      "op": "POP"
    },
    "3846": {
      "op": "POP"
    },
    "3847": {
      "op": "POP"
    },
    "3848": {
      "op": "SWAP3"
    },
    "3849": {
      "op": "SWAP2"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "op": "POP"
    },
    "3852": {
      "jump": "o",
      "op": "JUMP"
    },
    "3853": {
      "op": "JUMPDEST"
    },
    "3854": {
      "op": "DUP1"
    },
    "3855": {
      "op": "CALLDATALOAD"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3862": {
      "op": "SHL"
    },
    "3863": {
      "op": "SUB"
    },
    "3864": {
      "op": "DUP2"
    },
    "3865": {
      "op": "AND"
    },
    "3866": {
      "op": "DUP2"
    },
    "3867": {
      "op": "EQ"
    },
    "3868": {
      "op": "PUSH2",
      "value": "0xF24"
    },
    "3871": {
      "op": "JUMPI"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3874": {
      "op": "DUP1"
    },
    "3875": {
      "op": "REVERT"
    },
    "3876": {
      "op": "JUMPDEST"
    },
    "3877": {
      "op": "SWAP2"
    },
    "3878": {
      "op": "SWAP1"
    },
    "3879": {
      "op": "POP"
    },
    "3880": {
      "jump": "o",
      "op": "JUMP"
    },
    "3881": {
      "op": "JUMPDEST"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3884": {
      "op": "DUP1"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3887": {
      "op": "DUP4"
    },
    "3888": {
      "op": "DUP6"
    },
    "3889": {
      "op": "SUB"
    },
    "3890": {
      "op": "SLT"
    },
    "3891": {
      "op": "ISZERO"
    },
    "3892": {
      "op": "PUSH2",
      "value": "0xF3C"
    },
    "3895": {
      "op": "JUMPI"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3898": {
      "op": "DUP1"
    },
    "3899": {
      "op": "REVERT"
    },
    "3900": {
      "op": "JUMPDEST"
    },
    "3901": {
      "op": "PUSH2",
      "value": "0xF45"
    },
    "3904": {
      "op": "DUP4"
    },
    "3905": {
      "op": "PUSH2",
      "value": "0xF0D"
    },
    "3908": {
      "jump": "i",
      "op": "JUMP"
    },
    "3909": {
      "op": "JUMPDEST"
    },
    "3910": {
      "op": "SWAP5"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3913": {
      "op": "SWAP4"
    },
    "3914": {
      "op": "SWAP1"
    },
    "3915": {
      "op": "SWAP4"
    },
    "3916": {
      "op": "ADD"
    },
    "3917": {
      "op": "CALLDATALOAD"
    },
    "3918": {
      "op": "SWAP4"
    },
    "3919": {
      "op": "POP"
    },
    "3920": {
      "op": "POP"
    },
    "3921": {
      "op": "POP"
    },
    "3922": {
      "jump": "o",
      "op": "JUMP"
    },
    "3923": {
      "op": "JUMPDEST"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3926": {
      "op": "DUP1"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3931": {
      "op": "DUP5"
    },
    "3932": {
      "op": "DUP7"
    },
    "3933": {
      "op": "SUB"
    },
    "3934": {
      "op": "SLT"
    },
    "3935": {
      "op": "ISZERO"
    },
    "3936": {
      "op": "PUSH2",
      "value": "0xF68"
    },
    "3939": {
      "op": "JUMPI"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3942": {
      "op": "DUP1"
    },
    "3943": {
      "op": "REVERT"
    },
    "3944": {
      "op": "JUMPDEST"
    },
    "3945": {
      "op": "PUSH2",
      "value": "0xF71"
    },
    "3948": {
      "op": "DUP5"
    },
    "3949": {
      "op": "PUSH2",
      "value": "0xF0D"
    },
    "3952": {
      "jump": "i",
      "op": "JUMP"
    },
    "3953": {
      "op": "JUMPDEST"
    },
    "3954": {
      "op": "SWAP3"
    },
    "3955": {
      "op": "POP"
    },
    "3956": {
      "op": "PUSH2",
      "value": "0xF7F"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3961": {
      "op": "DUP6"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "PUSH2",
      "value": "0xF0D"
    },
    "3966": {
      "jump": "i",
      "op": "JUMP"
    },
    "3967": {
      "op": "JUMPDEST"
    },
    "3968": {
      "op": "SWAP2"
    },
    "3969": {
      "op": "POP"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3972": {
      "op": "DUP5"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "CALLDATALOAD"
    },
    "3975": {
      "op": "SWAP1"
    },
    "3976": {
      "op": "POP"
    },
    "3977": {
      "op": "SWAP3"
    },
    "3978": {
      "op": "POP"
    },
    "3979": {
      "op": "SWAP3"
    },
    "3980": {
      "op": "POP"
    },
    "3981": {
      "op": "SWAP3"
    },
    "3982": {
      "jump": "o",
      "op": "JUMP"
    },
    "3983": {
      "op": "JUMPDEST"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3988": {
      "op": "DUP3"
    },
    "3989": {
      "op": "DUP5"
    },
    "3990": {
      "op": "SUB"
    },
    "3991": {
      "op": "SLT"
    },
    "3992": {
      "op": "ISZERO"
    },
    "3993": {
      "op": "PUSH2",
      "value": "0xFA1"
    },
    "3996": {
      "op": "JUMPI"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3999": {
      "op": "DUP1"
    },
    "4000": {
      "op": "REVERT"
    },
    "4001": {
      "op": "JUMPDEST"
    },
    "4002": {
      "op": "PUSH2",
      "value": "0x6CF"
    },
    "4005": {
      "op": "DUP3"
    },
    "4006": {
      "op": "PUSH2",
      "value": "0xF0D"
    },
    "4009": {
      "jump": "i",
      "op": "JUMP"
    },
    "4010": {
      "op": "JUMPDEST"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4015": {
      "op": "DUP3"
    },
    "4016": {
      "op": "DUP5"
    },
    "4017": {
      "op": "SUB"
    },
    "4018": {
      "op": "SLT"
    },
    "4019": {
      "op": "ISZERO"
    },
    "4020": {
      "op": "PUSH2",
      "value": "0xFBC"
    },
    "4023": {
      "op": "JUMPI"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "REVERT"
    },
    "4028": {
      "op": "JUMPDEST"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "op": "CALLDATALOAD"
    },
    "4031": {
      "op": "SWAP2"
    },
    "4032": {
      "op": "SWAP1"
    },
    "4033": {
      "op": "POP"
    },
    "4034": {
      "jump": "o",
      "op": "JUMP"
    },
    "4035": {
      "op": "JUMPDEST"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4038": {
      "op": "DUP1"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4041": {
      "op": "DUP4"
    },
    "4042": {
      "op": "DUP6"
    },
    "4043": {
      "op": "SUB"
    },
    "4044": {
      "op": "SLT"
    },
    "4045": {
      "op": "ISZERO"
    },
    "4046": {
      "op": "PUSH2",
      "value": "0xFD6"
    },
    "4049": {
      "op": "JUMPI"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4052": {
      "op": "DUP1"
    },
    "4053": {
      "op": "REVERT"
    },
    "4054": {
      "op": "JUMPDEST"
    },
    "4055": {
      "op": "PUSH2",
      "value": "0xFDF"
    },
    "4058": {
      "op": "DUP4"
    },
    "4059": {
      "op": "PUSH2",
      "value": "0xF0D"
    },
    "4062": {
      "jump": "i",
      "op": "JUMP"
    },
    "4063": {
      "op": "JUMPDEST"
    },
    "4064": {
      "op": "SWAP2"
    },
    "4065": {
      "op": "POP"
    },
    "4066": {
      "op": "PUSH2",
      "value": "0xFED"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4071": {
      "op": "DUP5"
    },
    "4072": {
      "op": "ADD"
    },
    "4073": {
      "op": "PUSH2",
      "value": "0xF0D"
    },
    "4076": {
      "jump": "i",
      "op": "JUMP"
    },
    "4077": {
      "op": "JUMPDEST"
    },
    "4078": {
      "op": "SWAP1"
    },
    "4079": {
      "op": "POP"
    },
    "4080": {
      "op": "SWAP3"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "op": "SWAP3"
    },
    "4083": {
      "op": "SWAP1"
    },
    "4084": {
      "op": "POP"
    },
    "4085": {
      "jump": "o",
      "op": "JUMP"
    },
    "4086": {
      "op": "JUMPDEST"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4089": {
      "op": "DUP2"
    },
    "4090": {
      "op": "DUP2"
    },
    "4091": {
      "op": "SHR"
    },
    "4092": {
      "op": "SWAP1"
    },
    "4093": {
      "op": "DUP3"
    },
    "4094": {
      "op": "AND"
    },
    "4095": {
      "op": "DUP1"
    },
    "4096": {
      "op": "PUSH2",
      "value": "0x100A"
    },
    "4099": {
      "op": "JUMPI"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4102": {
      "op": "DUP3"
    },
    "4103": {
      "op": "AND"
    },
    "4104": {
      "op": "SWAP2"
    },
    "4105": {
      "op": "POP"
    },
    "4106": {
      "op": "JUMPDEST"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4109": {
      "op": "DUP3"
    },
    "4110": {
      "op": "LT"
    },
    "4111": {
      "op": "DUP2"
    },
    "4112": {
      "op": "SUB"
    },
    "4113": {
      "op": "PUSH2",
      "value": "0x102A"
    },
    "4116": {
      "op": "JUMPI"
    },
    "4117": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4124": {
      "op": "SHL"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4127": {
      "op": "MSTORE"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4132": {
      "op": "MSTORE"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4137": {
      "op": "REVERT"
    },
    "4138": {
      "op": "JUMPDEST"
    },
    "4139": {
      "op": "POP"
    },
    "4140": {
      "op": "SWAP2"
    },
    "4141": {
      "op": "SWAP1"
    },
    "4142": {
      "op": "POP"
    },
    "4143": {
      "jump": "o",
      "op": "JUMP"
    },
    "4144": {
      "op": "JUMPDEST"
    },
    "4145": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4152": {
      "op": "SHL"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4155": {
      "op": "MSTORE"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4160": {
      "op": "MSTORE"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4165": {
      "op": "REVERT"
    },
    "4166": {
      "op": "JUMPDEST"
    },
    "4167": {
      "op": "DUP1"
    },
    "4168": {
      "op": "DUP3"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "DUP1"
    },
    "4171": {
      "op": "DUP3"
    },
    "4172": {
      "op": "GT"
    },
    "4173": {
      "op": "ISZERO"
    },
    "4174": {
      "op": "PUSH2",
      "value": "0x492"
    },
    "4177": {
      "op": "JUMPI"
    },
    "4178": {
      "op": "PUSH2",
      "value": "0x492"
    },
    "4181": {
      "op": "PUSH2",
      "value": "0x1030"
    },
    "4184": {
      "jump": "i",
      "op": "JUMP"
    },
    "4185": {
      "op": "JUMPDEST"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4188": {
      "op": "DUP1"
    },
    "4189": {
      "op": "DUP3"
    },
    "4190": {
      "op": "MSTORE"
    },
    "4191": {
      "op": "DUP2"
    },
    "4192": {
      "op": "DUP2"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "op": "MSTORE"
    },
    "4195": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "op": "MSTORE"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4235": {
      "op": "ADD"
    },
    "4236": {
      "op": "SWAP1"
    },
    "4237": {
      "jump": "o",
      "op": "JUMP"
    },
    "4238": {
      "op": "JUMPDEST"
    },
    "4239": {
      "op": "DUP1"
    },
    "4240": {
      "op": "DUP3"
    },
    "4241": {
      "op": "MUL"
    },
    "4242": {
      "op": "DUP2"
    },
    "4243": {
      "op": "ISZERO"
    },
    "4244": {
      "op": "DUP3"
    },
    "4245": {
      "op": "DUP3"
    },
    "4246": {
      "op": "DIV"
    },
    "4247": {
      "op": "DUP5"
    },
    "4248": {
      "op": "EQ"
    },
    "4249": {
      "op": "OR"
    },
    "4250": {
      "op": "PUSH2",
      "value": "0x492"
    },
    "4253": {
      "op": "JUMPI"
    },
    "4254": {
      "op": "PUSH2",
      "value": "0x492"
    },
    "4257": {
      "op": "PUSH2",
      "value": "0x1030"
    },
    "4260": {
      "jump": "i",
      "op": "JUMP"
    },
    "4261": {
      "op": "JUMPDEST"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4264": {
      "op": "DUP3"
    },
    "4265": {
      "op": "PUSH2",
      "value": "0x10C2"
    },
    "4268": {
      "op": "JUMPI"
    },
    "4269": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4276": {
      "op": "SHL"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4279": {
      "op": "MSTORE"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4284": {
      "op": "MSTORE"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4289": {
      "op": "REVERT"
    },
    "4290": {
      "op": "JUMPDEST"
    },
    "4291": {
      "op": "POP"
    },
    "4292": {
      "op": "DIV"
    },
    "4293": {
      "op": "SWAP1"
    },
    "4294": {
      "jump": "o",
      "op": "JUMP"
    },
    "4295": {
      "op": "JUMPDEST"
    },
    "4296": {
      "op": "DUP2"
    },
    "4297": {
      "op": "DUP2"
    },
    "4298": {
      "op": "SUB"
    },
    "4299": {
      "op": "DUP2"
    },
    "4300": {
      "op": "DUP2"
    },
    "4301": {
      "op": "GT"
    },
    "4302": {
      "op": "ISZERO"
    },
    "4303": {
      "op": "PUSH2",
      "value": "0x492"
    },
    "4306": {
      "op": "JUMPI"
    },
    "4307": {
      "op": "PUSH2",
      "value": "0x492"
    },
    "4310": {
      "op": "PUSH2",
      "value": "0x1030"
    },
    "4313": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "b92edcc00ae288acbc19f960d45e7317a50b0e5a",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.14;\n\nimport {IAthenaWrap} from \"./interfaces/IAthenaWrap.sol\";\nimport {AthenaEther} from \"./AthenaEther.sol\";\n\nimport {Guard} from \"./utils/Guard.sol\";\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n* @title AthenaWrap.\n* @author Anthony (fps) https://github.com/0xfps.\n* @dev  AthenaWrap, a simple wrapping protocol. It takes in ETH, MATIC or\n*       AVAX, and sends AETH tokens to the caller.\n*/\ncontract AthenaWrap is \nIAthenaWrap, \nAthenaEther, \nOwnable,\nGuard\n{\n    /// @dev Total wrapped in the protocol.\n    uint256 private _totalWrapped;\n    /// @dev Tota unwrapped in the protocol.\n    uint256 private _totalUnwrapped;\n    /// @dev Protocol tax revenue.\n    uint256 private tax;\n\n    /// @dev Total amount wrapped by an address in the protocol.\n    mapping(address => uint256) private _totalWrappedByAddress;\n    /// @dev Total amount unwrapped by an address in the protocol.\n    mapping(address => uint256) private _totalUnwrappedByAddress;\n\n    constructor() AthenaEther(address(this)) {}\n\n    receive() external payable {}\n\n    /**\n    * @inheritdoc IAthenaWrap\n    */\n    function totalWrapped() public view returns(uint256) {\n        /// @dev Return total wrapped by protocol.\n        return _totalWrapped;\n    }\n\n    /**\n    * @inheritdoc IAthenaWrap\n    */\n    function totalUnwrapped() public view returns(uint256) {\n        /// @dev Return total unwrapped by protocol.\n        return _totalUnwrapped;\n    }\n\n    /**\n    * @inheritdoc IAthenaWrap\n    */\n    function totalWrappedByAddress(address _address) \n    public \n    view \n    returns(uint256)\n    {\n        /// @dev Ensure Address is not a zero address.\n        require(_address != address(0), \"0x0 Address\");\n        /// @dev Return total wrapped by address.\n        return _totalWrappedByAddress[_address];\n    }\n\n    /**\n    * @inheritdoc IAthenaWrap\n    */\n    function totalUnwrappedByAddress(address _address) \n    public \n    view \n    returns(uint256)\n    {\n        /// @dev Ensure Address is not a zero address.\n        require(_address != address(0), \"0x0 Address\");\n        /// @dev Return total wrapped by address.\n        return _totalUnwrappedByAddress[_address];\n    }\n\n    /**\n    * @inheritdoc IAthenaWrap\n    */\n    function precalculateTaxForWrap(uint256 _amount) \n    public \n    pure \n    returns(uint256)\n    {\n        /// @dev Require that amount is not 0.\n        require(_amount != 0, \"Amount == 0\");\n\n        /// @dev Calculate tax [0.1% of `_amount`].\n        uint256 taxOnAmount = (1 * _amount) / 1000;\n\n        /// @dev Return value.\n        return taxOnAmount;\n    }\n\n    /**\n    * @inheritdoc IAthenaWrap\n    */\n    function wrap() public payable {\n        /// @dev Require money sent is not 0.\n        require(msg.value != 0, \"Wrapping 0\");\n\n        /// @dev Calculate tax.\n        uint256 _tax = precalculateTaxForWrap(msg.value);\n        /// @dev Subtract tax.\n        uint256 amountToWrap = msg.value - _tax;\n        /// @dev Add that to taxes.\n        tax += _tax;\n        /// @dev Increment total wrapped by the value.\n        _totalWrapped += msg.value;\n        /// @dev Increment the total wrapped by caller by value.\n        _totalWrappedByAddress[msg.sender] += msg.value;\n\n        /// @dev Transfer tokens.\n        _transfer(address(this), msg.sender, amountToWrap);\n\n        /// @dev Emit the {Wrap()} event.\n        emit Wrap(msg.sender, msg.value);\n    }\n\n    /**\n    * @inheritdoc IAthenaWrap\n    */\n    function unwrap(uint256 _amount) public noReentrance {\n        /// @dev Require money sent is not 0.\n        require(_amount != 0, \"Wrapping 0\");\n\n        /// @dev Calculate tax.\n        uint256 _tax = precalculateTaxForWrap(_amount);\n        /// @dev Subtract tax.\n        uint256 amountToUnwrap = _amount - _tax;\n        /// @dev Increment amount unwrapped.\n        _totalUnwrapped += _amount;\n        /// @dev Increment amount unwrapped by the caller.\n        _totalUnwrappedByAddress[msg.sender] += _amount;\n\n        /// @dev Transfer amount from caller to contract.\n        _transfer(\n            msg.sender, \n            address(this), \n            _amount\n        );\n\n        /// @dev Send transferable value after tax to caller.\n        (bool sent, ) = payable(msg.sender).call{value: amountToUnwrap}(\"\");\n        sent; // Unused.\n\n        /// @dev Emit the {Unwrap()} event.\n        emit Unwrap(msg.sender, _amount);\n    }\n\n    /**\n    * @inheritdoc IAthenaWrap\n    */\n    function withdraw() public onlyOwner {\n        /// @dev Require that taxes have been collected.\n        require(tax != 0, \"Tax == 0\");\n\n        /// @dev Reset tax.\n        tax = 0;\n\n        /// @dev Transfer tax earnings.\n        (bool sent, ) = payable(owner()).call{value: tax}(\"\");\n        sent; // Unused.\n\n        /// @dev Emit the {Withdraw()} event.\n        emit Withdraw(msg.sender, tax);\n    }\n}",
  "sourceMap": "482:4413:11:-:0;;;1040:43;;;;;;;;;;1074:4;1978:113:1;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;2052:5;2044;:13;;;;;;:::i;:::-;-1:-1:-1;2067:7:1;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;668:36:10::1;674:5;681:22;668:5;;;:36;;:::i;:::-;784:43;::::0;;-1:-1:-1;;;;;2962:32:14;;2944:51;;804:22:10::1;3026:2:14::0;3011:18;;3004:34;784:43:10::1;::::0;2917:18:14;784:43:10::1;;;;;;;-1:-1:-1::0;921:32:0;719:10:4;921:18:0;:32::i;:::-;482:4413:11;;8411:389:1;-1:-1:-1;;;;;8494:21:1;;8486:65;;;;-1:-1:-1;;;8486:65:1;;3251:2:14;8486:65:1;;;3233:21:14;3290:2;3270:18;;;3263:30;3329:33;3309:18;;;3302:61;3380:18;;8486:65:1;;;;;;;;8638:6;8622:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8654:18:1;;:9;:18;;;;;;;;;;:28;;8676:6;;8654:9;:28;;8676:6;;8654:28;:::i;:::-;;;;-1:-1:-1;;8697:37:1;;3782:25:14;;;-1:-1:-1;;;;;8697:37:1;;;8714:1;;8697:37;;3770:2:14;3755:18;8697:37:1;;;;;;;8411:389;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;11795:121:1:-;;;;:::o;14:127:14:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:14;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:14;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:14;;;2580:26;2531:89;-1:-1:-1;;1335:1:14;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:14;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:14;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:14;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:14:o;3409:222::-;3474:9;;;3495:10;;;3492:133;;;3547:10;3542:3;3538:20;3535:1;3528:31;3582:4;3579:1;3572:15;3610:4;3607:1;3600:15;3492:133;3409:222;;;;:::o;3636:177::-;482:4413:11;;;;;;",
  "sourcePath": "contracts/athena/contracts/AthenaWrap.sol",
  "type": "contract"
}